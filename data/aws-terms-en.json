{
    "EC2": {
        "name": "Elastic Compute Cloud",
        "description": "A web service that provides resizable compute capacity in the cloud. It allows you to launch and manage virtual servers (instances) with scalable computing capacity.",
        "usability": {
            "reviews": [
                "The initial setup took some time to understand, but it's really convenient once you get familiar with it",
                "I appreciate having so many instance types to choose from for different projects",
                "The pricing structure is quite clear, which helps with budgeting and cost planning"
            ],
            "pros": [
                "High flexibility",
                "Rich instance types",
                "Pay-as-you-go"
            ],
            "cons": [
                "Learning curve",
                "Many configuration options"
            ]
        }
    },
    "RDS": {
        "name": "Relational Database Service",
        "description": "A managed relational database service that supports MySQL, PostgreSQL, Oracle, SQL Server, and more. It automates backups, patching, and monitoring.",
        "usability": {
            "reviews": [
                "It's been wonderful not having to worry about database maintenance tasks",
                "The automatic backup feature gives me great peace of mind",
                "Setting up high availability was much easier than I expected"
            ],
            "pros": [
                "Automated management",
                "High availability",
                "Easy scaling"
            ],
            "cons": [
                "Higher cost than on-premises",
                "Limited customization"
            ]
        }
    },
    "ECS": {
        "name": "Elastic Container Service",
        "description": "A fully managed container orchestration service for running and managing Docker containers. Can run on EC2 instances or Fargate.",
        "usability": {
            "reviews": [
                "If you're familiar with Docker, getting started feels quite natural",
                "Fargate has been a game-changer - no more server management headaches",
                "Task definitions took some time to figure out, but the documentation helped"
            ],
            "pros": [
                "Docker compatibility",
                "Serverless with Fargate",
                "AWS service integration"
            ],
            "cons": [
                "Learning curve",
                "Configuration complexity",
                "Less features than Kubernetes"
            ]
        }
    },
    "EKS": {
        "name": "Elastic Kubernetes Service",
        "description": "A managed Kubernetes service that simplifies running Kubernetes clusters with high availability and security on AWS.",
        "usability": {
            "reviews": [
                "Having Kubernetes experience definitely helps, and cluster management becomes much more manageable",
                "I love that it's standard Kubernetes - makes moving between environments easier",
                "The initial setup was challenging, but once configured, it runs smoothly"
            ],
            "pros": [
                "Standard Kubernetes",
                "High portability",
                "Rich features"
            ],
            "cons": [
                "High learning curve",
                "Complex configuration",
                "Higher cost"
            ]
        }
    },
    "S3": {
        "name": "Simple Storage Service",
        "description": "Object storage service with high durability for websites, applications, backups, and data archiving. Offers various storage classes for different use cases.",
        "usability": {
            "reviews": [
                "The web console is really user-friendly and makes file management a breeze",
                "The incredible durability rating gives me confidence in storing important data",
                "Setting up static website hosting was surprisingly straightforward"
            ],
            "pros": [
                "High durability",
                "User-friendly UI",
                "Various storage classes"
            ],
            "cons": [
                "Cost with high access volume",
                "No deletion recovery"
            ]
        }
    },
    "Lambda": {
        "name": "AWS Lambda",
        "description": "Serverless computing service that runs code without managing servers. Perfect for event-driven processing with pay-per-use pricing.",
        "usability": {
            "reviews": [
                "It's liberating to focus purely on code without worrying about servers",
                "For smaller workloads, the cost efficiency is really impressive",
                "Integration with other AWS services feels seamless and well-designed"
            ],
            "pros": [
                "No server management",
                "Pay-per-use",
                "High scalability"
            ],
            "cons": [
                "Execution time limits",
                "Cold starts",
                "Debugging challenges"
            ]
        }
    },
    "VPC": {
        "name": "Virtual Private Cloud",
        "description": "A logically isolated private network environment within AWS. Provides access control through security groups and network ACLs.",
        "usability": {
            "reviews": [
                "Learning networking concepts was worth it for the security benefits it provides",
                "The default VPC helped me get started without getting overwhelmed",
                "Network design takes some planning, but the flexibility is worth the effort"
            ],
            "pros": [
                "High security",
                "Flexible network design",
                "Service integration"
            ],
            "cons": [
                "Networking knowledge required",
                "Configuration error risks",
                "Complex pricing"
            ]
        }
    },
    "IAM": {
        "name": "Identity and Access Management",
        "description": "Service for securely controlling access to AWS resources. Manages users, groups, roles, and policies following the principle of least privilege.",
        "usability": {
            "reviews": [
                "I've come to appreciate how fundamental this service is for keeping everything secure",
                "Writing policies was intimidating at first, but it gets much easier with practice",
                "Setting up MFA made me feel much more confident about account security"
            ],
            "pros": [
                "Fine-grained access control",
                "MFA support",
                "Audit logging"
            ],
            "cons": [
                "Complex policy syntax",
                "Permission misconfiguration risks",
                "Conceptual learning required"
            ]
        }
    },
    "CloudFormation": {
        "name": "AWS CloudFormation",
        "description": "Infrastructure as Code (IaC) service that manages AWS resources through JSON or YAML templates. Enables version control and automated deployment of infrastructure.",
        "usability": {
            "reviews": [
                "Being able to manage infrastructure as code has been a wonderful experience",
                "Creating templates takes time initially, but the reusability makes it worthwhile",
                "The rollback feature gives me peace of mind when deploying changes"
            ],
            "pros": [
                "Infrastructure as code",
                "Version control",
                "Automatic rollback"
            ],
            "cons": [
                "Template creation complexity",
                "Debugging challenges",
                "Learning curve"
            ]
        }
    },
    "CloudWatch": {
        "name": "Amazon CloudWatch",
        "description": "Monitoring service for AWS resources and applications. Provides metrics collection, log management, alarms, and dashboard creation.",
        "usability": {
            "reviews": [
                "Setting up basic monitoring was more straightforward than I anticipated",
                "The dashboards are well-designed and help me spot issues quickly",
                "Having alarms configured helps me stay on top of potential problems"
            ],
            "pros": [
                "Intuitive UI",
                "Rich metrics",
                "Flexible alarm settings"
            ],
            "cons": [
                "High-frequency monitoring costs",
                "Custom metrics pricing",
                "Log retention limits"
            ]
        }
    },
    "CloudWatch Logs": {
        "name": "Amazon CloudWatch Logs",
        "description": "Log management service for AWS. Collects, monitors, and stores application and system logs with real-time analysis and alerting capabilities.",
        "usability": {
            "reviews": [
                "The search functionality is powerful and helps identify issues quickly",
                "Real-time log viewing makes debugging much more efficient",
                "Being able to set log retention periods helps with cost management"
            ],
            "pros": [
                "Real-time log monitoring",
                "Powerful search and filtering",
                "AWS service integration",
                "Automatic log collection"
            ],
            "cons": [
                "Log storage costs",
                "Search speed with large volumes",
                "Retention period limitations",
                "Complex query learning curve"
            ]
        }
    },
    "Route53": {
        "name": "Amazon Route 53",
        "description": "Highly available DNS web service. Provides domain registration, DNS management, health checks, and traffic routing.",
        "usability": {
            "reviews": [
                "The DNS configuration interface is quite approachable, even for beginners",
                "Health checks provide great peace of mind with automatic failover capabilities",
                "Integration with other AWS services feels natural and well-thought-out"
            ],
            "pros": [
                "User-friendly UI",
                "High availability",
                "AWS service integration"
            ],
            "cons": [
                "DNS query charges",
                "Complex routing configuration",
                "Domain transfer overhead"
            ]
        }
    },
    "CloudFront": {
        "name": "Amazon CloudFront",
        "description": "Content Delivery Network (CDN) service that delivers content with low latency through a global network of edge locations.",
        "usability": {
            "reviews": [
                "The setup process was manageable, and the performance improvements are really noticeable",
                "S3 integration works beautifully for hosting static websites",
                "Cache configuration requires some learning, but the performance gains are worth it"
            ],
            "pros": [
                "High performance",
                "Global distribution",
                "S3 integration"
            ],
            "cons": [
                "Cache configuration complexity",
                "Invalidation charges",
                "Configuration propagation delays"
            ]
        }
    },
    "API Gateway": {
        "name": "Amazon API Gateway",
        "description": "Fully managed service for creating, publishing, maintaining, and monitoring RESTful APIs and WebSocket APIs. Enables scalable and secure API development.",
        "usability": {
            "reviews": [
                "Creating and publishing APIs has become so much more streamlined",
                "The built-in authentication and rate limiting features are really helpful",
                "Integration with Lambda works seamlessly and boosts development productivity"
            ],
            "pros": [
                "Easy API creation",
                "Rich security features",
                "Auto-scaling"
            ],
            "cons": [
                "Complex configuration",
                "Response time limits",
                "Cold start issues"
            ]
        }
    },
    "SNS": {
        "name": "Simple Notification Service",
        "description": "Push notification service that can deliver messages to multiple recipients, supporting SMS, email, mobile push notifications, and more.",
        "usability": {
            "reviews": [
                "Message delivery is reliable, making it great for user communications",
                "Supporting multiple delivery methods makes it very versatile",
                "The setup was intuitive and we got it working right away"
            ],
            "pros": [
                "Multiple delivery methods",
                "High reliability",
                "Easy setup"
            ],
            "cons": [
                "Delivery costs",
                "Message size limits",
                "Regional restrictions"
            ]
        }
    },
    "SQS": {
        "name": "Simple Queue Service",
        "description": "Fully managed message queuing service that enables asynchronous communication between applications and helps decouple system components.",
        "usability": {
            "reviews": [
                "System integration has become much more stable and fault-tolerant",
                "Being able to control message processing order is really convenient",
                "The setup was simple and we were able to start using it immediately"
            ],
            "pros": [
                "High availability",
                "Scalable",
                "Easy integration"
            ],
            "cons": [
                "Message size limits",
                "Ordering limitations",
                "Potential delays"
            ]
        }
    },
    "ElastiCache": {
        "name": "Amazon ElastiCache",
        "description": "In-memory caching service supporting Redis and Memcached, designed to improve application performance by reducing database load.",
        "usability": {
            "reviews": [
                "Database load has been significantly reduced, which is a huge help",
                "Response times have improved dramatically",
                "The configuration was easier than I expected"
            ],
            "pros": [
                "Fast data access",
                "Load reduction",
                "Managed service"
            ],
            "cons": [
                "Memory costs",
                "No data persistence",
                "Complex configuration"
            ]
        }
    },
    "Kinesis": {
        "name": "Amazon Kinesis",
        "description": "Real-time data streaming service that enables collection, processing, and analysis of large amounts of data in real-time.",
        "usability": {
            "reviews": [
                "Real-time data processing capabilities have been exactly what we needed",
                "It handles large volumes of data reliably",
                "Being able to use analysis results immediately is very convenient"
            ],
            "pros": [
                "Real-time processing",
                "High throughput",
                "Scalable"
            ],
            "cons": [
                "Complex setup",
                "Learning curve",
                "Data retention limits"
            ]
        }
    },
    "Redshift": {
        "name": "Amazon Redshift",
        "description": "Fully managed data warehouse service that can perform high-speed analysis on petabyte-scale data, ideal for business intelligence.",
        "usability": {
            "reviews": [
                "Large-scale data analysis has become much faster",
                "Integration with existing BI tools works smoothly",
                "The cost-performance ratio feels quite good"
            ],
            "pros": [
                "Fast analysis",
                "Scalable",
                "Existing tool integration"
            ],
            "cons": [
                "Complex initial setup",
                "SQL knowledge required",
                "Data migration effort"
            ]
        }
    },
    "Athena": {
        "name": "Amazon Athena",
        "description": "Serverless query service that allows direct analysis of data stored in S3 using standard SQL, with no infrastructure management required.",
        "usability": {
            "reviews": [
                "Being able to analyze S3 data directly is incredibly convenient",
                "Not having to manage servers makes operations much easier",
                "If you know SQL, it's easy to get started"
            ],
            "pros": [
                "Serverless",
                "Standard SQL support",
                "S3 integration"
            ],
            "cons": [
                "Query costs",
                "Performance limitations",
                "Complex query constraints"
            ]
        }
    },
    "Glue": {
        "name": "AWS Glue",
        "description": "Fully managed ETL service that automates data extraction, transformation, and loading, streamlining data preprocessing for analytics.",
        "usability": {
            "reviews": [
                "Data preprocessing automation has significantly improved our work efficiency",
                "Support for various data sources is really helpful",
                "Scheduled execution was easy to set up"
            ],
            "pros": [
                "Automation",
                "Multiple data source support",
                "Scalable"
            ],
            "cons": [
                "Learning curve",
                "Debugging difficulties",
                "Execution time limits"
            ]
        }
    },
    "SageMaker": {
        "name": "Amazon SageMaker",
        "description": "Machine learning platform that provides end-to-end ML workflow from model building and training to deployment, streamlining the entire process.",
        "usability": {
            "reviews": [
                "Not having to set up ML environments lets us focus on development immediately",
                "The variety of algorithms available is really convenient",
                "Model deployment was surprisingly straightforward"
            ],
            "pros": [
                "Integrated environment",
                "Rich algorithms",
                "Auto-scaling"
            ],
            "cons": [
                "High costs",
                "Learning curve",
                "Vendor lock-in"
            ]
        }
    },
    "CodeCommit": {
        "name": "AWS CodeCommit",
        "description": "Fully managed Git repository service providing private source code management with easy integration with other AWS services.",
        "usability": {
            "reviews": [
                "Works just like GitHub, so migration was smooth",
                "Integration with other AWS services is really convenient",
                "Security-wise, I feel confident using it"
            ],
            "pros": [
                "Git compatibility",
                "AWS integration",
                "High security"
            ],
            "cons": [
                "Feature limitations",
                "UI usability issues",
                "Limited ecosystem"
            ]
        }
    },
    "CodeBuild": {
        "name": "AWS CodeBuild",
        "description": "Fully managed build service that automates source code compilation, test execution, and deployable package creation.",
        "usability": {
            "reviews": [
                "Not having to manage build environments makes operations much easier",
                "Parallel builds have improved our development speed",
                "Integration with other AWS services is seamless"
            ],
            "pros": [
                "Serverless",
                "Parallel execution",
                "Pay-per-use"
            ],
            "cons": [
                "Configuration complexity",
                "Debugging difficulties",
                "Execution time limits"
            ]
        }
    },
    "CodeDeploy": {
        "name": "AWS CodeDeploy",
        "description": "Application deployment service that automates deployments to EC2, Lambda, and on-premises servers while minimizing downtime.",
        "usability": {
            "reviews": [
                "Deployment automation has reduced human errors significantly",
                "Having rollback functionality gives me confidence when deploying",
                "Gradual deployment was easy to configure"
            ],
            "pros": [
                "Automated deployment",
                "Rollback functionality",
                "Gradual deployment"
            ],
            "cons": [
                "Configuration complexity",
                "Learning curve",
                "Limited environment support"
            ]
        }
    },
    "CodePipeline": {
        "name": "AWS CodePipeline",
        "description": "Continuous integration and deployment service that builds automated pipelines from source code changes to production deployment.",
        "usability": {
            "reviews": [
                "Building CI/CD pipelines has become much easier and improved our development efficiency",
                "The visual pipeline status is very clear and easy to understand",
                "Integration with other AWS services is excellent"
            ],
            "pros": [
                "Visual management",
                "AWS integration",
                "Automation"
            ],
            "cons": [
                "AWS dependency",
                "Complex configuration",
                "Cost considerations"
            ]
        }
    },
    "Elastic Beanstalk": {
        "name": "AWS Elastic Beanstalk",
        "description": "Application deployment service that allows you to run web applications by simply uploading code, without worrying about infrastructure details.",
        "usability": {
            "reviews": [
                "Application deployment has become incredibly simple",
                "Being able to focus on development without worrying about infrastructure management is great",
                "Automatic scaling takes care of everything for us"
            ],
            "pros": [
                "Easy deployment",
                "Auto-scaling",
                "Multi-language support"
            ],
            "cons": [
                "Customization limitations",
                "Vendor lock-in",
                "Debugging difficulties"
            ]
        }
    },
    "EFS": {
        "name": "Elastic File System",
        "description": "Fully managed NFS file system that can be shared across multiple EC2 instances and scales automatically.",
        "usability": {
            "reviews": [
                "File sharing between multiple servers works seamlessly",
                "Not having to worry about capacity planning is really helpful",
                "The setup was simpler than I expected"
            ],
            "pros": [
                "Auto-scaling",
                "High availability",
                "POSIX compliant"
            ],
            "cons": [
                "Performance limitations",
                "Cost considerations",
                "Latency issues"
            ]
        }
    },
    "FSx": {
        "name": "Amazon FSx",
        "description": "High-performance file system service supporting Windows File Server and Lustre file systems, suitable for HPC workloads.",
        "usability": {
            "reviews": [
                "File access speed for high-performance computing is excellent",
                "Compatibility with existing Windows applications is great",
                "Perfect fit for our HPC workloads"
            ],
            "pros": [
                "High performance",
                "Legacy system compatibility",
                "HPC optimized"
            ],
            "cons": [
                "High cost",
                "Complex configuration",
                "Regional limitations"
            ]
        }
    },
    "EBS": {
        "name": "Elastic Block Store",
        "description": "Persistent block storage for EC2 instances providing high IOPS and low latency for data persistence.",
        "usability": {
            "reviews": [
                "Data persistence gives me confidence in system reliability",
                "Snapshot functionality makes backups straightforward",
                "Performance meets our requirements well"
            ],
            "pros": [
                "Data persistence",
                "High performance",
                "Snapshot capability"
            ],
            "cons": [
                "Single AZ limitation",
                "Cost considerations",
                "Resize limitations"
            ]
        }
    },
    "S3 Glacier": {
        "name": "Amazon S3 Glacier",
        "description": "Low-cost archival storage service with longer retrieval times but extremely affordable long-term data storage.",
        "usability": {
            "reviews": [
                "Long-term data storage at a fraction of the cost is fantastic",
                "Compliance requirements are easily met",
                "Retrieval takes time, but it's perfect for our archival needs"
            ],
            "pros": [
                "Low cost",
                "Long-term storage",
                "High durability"
            ],
            "cons": [
                "Retrieval time",
                "Complex pricing",
                "Minimum storage duration"
            ]
        }
    },
    "WorkSpaces": {
        "name": "Amazon WorkSpaces",
        "description": "Cloud-based virtual desktop service supporting remote work and BYOD with secure desktop environments.",
        "usability": {
            "reviews": [
                "Setting up remote work environments became incredibly easy",
                "Security aspects give us peace of mind",
                "Access from various devices is very convenient"
            ],
            "pros": [
                "Remote access",
                "Secure",
                "Easy management"
            ],
            "cons": [
                "Network dependency",
                "Cost considerations",
                "Customization limits"
            ]
        }
    },
    "AppStream": {
        "name": "Amazon AppStream 2.0",
        "description": "Application streaming service that delivers desktop applications through browsers, accessible from anywhere.",
        "usability": {
            "reviews": [
                "Using applications without installation is incredibly convenient",
                "Browser-only access is brilliant",
                "Security benefits are significant"
            ],
            "pros": [
                "Browser access",
                "No installation required",
                "Secure"
            ],
            "cons": [
                "Network quality dependent",
                "Application limitations",
                "Cost considerations"
            ]
        }
    },
    "Connect": {
        "name": "Amazon Connect",
        "description": "Cloud-based contact center service for building voice and chat support with AI integration capabilities.",
        "usability": {
            "reviews": [
                "Contact center setup was surprisingly straightforward",
                "AI integration has improved our operational efficiency",
                "Pay-per-use pricing makes cost management easier"
            ],
            "pros": [
                "Easy setup",
                "AI integration",
                "Pay-per-use"
            ],
            "cons": [
                "Feature limitations",
                "Customization complexity",
                "Regional restrictions"
            ]
        }
    },
    "Chime": {
        "name": "Amazon Chime",
        "description": "Video conferencing and chat service providing high-quality audio/video calls and messaging for business communication.",
        "usability": {
            "reviews": [
                "Audio quality is excellent, making meetings run smoothly",
                "Screen sharing functionality is user-friendly",
                "Security features are suitable for enterprise use"
            ],
            "pros": [
                "High-quality calls",
                "User-friendly UI",
                "Secure"
            ],
            "cons": [
                "Limited features",
                "Competition with other tools",
                "Regional limitations"
            ]
        }
    },
    "Pinpoint": {
        "name": "Amazon Pinpoint",
        "description": "Multi-channel marketing communication service managing email, SMS, and push notifications to improve customer engagement.",
        "usability": {
            "reviews": [
                "Managing multiple channels from one place is very efficient",
                "Segmentation features enable precise targeting",
                "Analytics capabilities are comprehensive and helpful for improvements"
            ],
            "pros": [
                "Multi-channel",
                "Detailed analytics",
                "Segmentation"
            ],
            "cons": [
                "Complex configuration",
                "Learning curve",
                "Regional limitations"
            ]
        }
    },
    "SES": {
        "name": "Simple Email Service",
        "description": "Scalable email sending service for transactional and marketing emails with high delivery rates.",
        "usability": {
            "reviews": [
                "Email delivery rates are reliable and trustworthy",
                "High-volume email sending is handled stably",
                "Configuration was clear and implementation was straightforward"
            ],
            "pros": [
                "High delivery rates",
                "Scalable",
                "Low cost"
            ],
            "cons": [
                "Initial limitations",
                "Spam prevention complexity",
                "Regional restrictions"
            ]
        }
    },
    "Cognito": {
        "name": "Amazon Cognito",
        "description": "User authentication and authorization service providing user management, sign-in/sign-up, and social login capabilities.",
        "usability": {
            "reviews": [
                "User authentication implementation became much simpler",
                "Social login integration was easy to set up",
                "Security aspects give us confidence"
            ],
            "pros": [
                "Easy implementation",
                "Social login support",
                "Secure"
            ],
            "cons": [
                "Customization limitations",
                "Complex configuration",
                "UI restrictions"
            ]
        }
    },
    "Directory Service": {
        "name": "AWS Directory Service",
        "description": "Managed Active Directory service providing integration with existing on-premises AD and cloud-native directory services.",
        "usability": {
            "reviews": [
                "Integration with existing Active Directory was seamless",
                "Centralized user management has simplified operations",
                "Security policy application is straightforward"
            ],
            "pros": [
                "AD compatibility",
                "Centralized management",
                "Security integration"
            ],
            "cons": [
                "Windows dependency",
                "Complex configuration",
                "Cost considerations"
            ]
        }
    },
    "WAF": {
        "name": "AWS WAF",
        "description": "Web Application Firewall protecting web applications from attacks like SQL injection and XSS.",
        "usability": {
            "reviews": [
                "Web application security has improved significantly",
                "Automatic attack pattern detection is very helpful",
                "Configuration was simpler than expected"
            ],
            "pros": [
                "Automatic protection",
                "Custom rules",
                "Real-time monitoring"
            ],
            "cons": [
                "False positives",
                "Complex rule configuration",
                "Cost considerations"
            ]
        }
    },
    "Shield": {
        "name": "AWS Shield",
        "description": "DDoS protection service with Standard version providing free basic protection and Advanced version offering enhanced protection with 24/7 support.",
        "usability": {
            "reviews": [
                "Automatic DDoS protection provides great peace of mind",
                "Having a free Standard version is wonderful",
                "Advanced version support is comprehensive and reliable"
            ],
            "pros": [
                "Automatic protection",
                "Free tier available",
                "24/7 support"
            ],
            "cons": [
                "Advanced version cost",
                "Configuration complexity",
                "Protection limitations"
            ]
        }
    },
    "GuardDuty": {
        "name": "Amazon GuardDuty",
        "description": "Threat detection service using machine learning to identify malicious activities and anomalous behavior in AWS accounts and workloads.",
        "usability": {
            "reviews": [
                "Automatic security threat detection is reassuring",
                "Machine learning analysis is accurate and trustworthy",
                "Alerts are clear and actionable"
            ],
            "pros": [
                "Automatic threat detection",
                "Machine learning",
                "Integrated monitoring"
            ],
            "cons": [
                "False positives",
                "Alert fatigue",
                "Cost considerations"
            ]
        }
    },
    "Inspector": {
        "name": "Amazon Inspector",
        "description": "Security assessment service that automatically scans EC2 instances and container images for vulnerabilities and security issues.",
        "usability": {
            "reviews": [
                "Automatic vulnerability detection has simplified operations",
                "Detailed reports make it clear what needs attention",
                "Continuous monitoring provides ongoing assurance"
            ],
            "pros": [
                "Automatic scanning",
                "Detailed reporting",
                "Continuous monitoring"
            ],
            "cons": [
                "Detection accuracy",
                "Remediation effort",
                "Cost considerations"
            ]
        }
    },
    "Macie": {
        "name": "Amazon Macie",
        "description": "Data security service using machine learning to discover and classify sensitive data in S3, supporting data protection efforts.",
        "usability": {
            "reviews": [
                "Automatic sensitive data discovery is incredibly helpful",
                "Data classification accuracy is high and reliable",
                "Compliance efforts have become much easier"
            ],
            "pros": [
                "Automatic data discovery",
                "ML classification",
                "Compliance support"
            ],
            "cons": [
                "S3 only",
                "Misclassification",
                "Cost considerations"
            ]
        }
    },
    "Secrets Manager": {
        "name": "AWS Secrets Manager",
        "description": "Secret management service for securely storing and managing sensitive information like database credentials and API keys with automatic rotation.",
        "usability": {
            "reviews": [
                "Secure password management gives us peace of mind",
                "Automatic rotation functionality is very convenient",
                "Application integration was straightforward"
            ],
            "pros": [
                "Secure storage",
                "Automatic rotation",
                "Easy integration"
            ],
            "cons": [
                "API call costs",
                "Complex configuration",
                "Regional limitations"
            ]
        }
    },
    "Systems Manager": {
        "name": "AWS Systems Manager",
        "description": "Operations management service providing configuration management, patch application, and operational task automation for EC2 instances and on-premises servers.",
        "usability": {
            "reviews": [
                "Centralized server operations management is very efficient",
                "Patch automation has reduced our operational burden",
                "Multi-server management has become much easier"
            ],
            "pros": [
                "Centralized management",
                "Automation",
                "Hybrid support"
            ],
            "cons": [
                "Feature complexity",
                "Learning curve",
                "Configuration complexity"
            ]
        }
    },
    "Config": {
        "name": "AWS Config",
        "description": "Configuration management and compliance monitoring service that records AWS resource configuration changes and monitors compliance rule adherence.",
        "usability": {
            "reviews": [
                "Configuration change history makes audit compliance much easier",
                "Automatic compliance violation detection is helpful",
                "Configuration visualization improves manageability"
            ],
            "pros": [
                "Configuration history",
                "Compliance monitoring",
                "Automatic detection"
            ],
            "cons": [
                "Large data volumes",
                "Cost considerations",
                "Complex configuration"
            ]
        }
    },
    "CloudTrail": {
        "name": "AWS CloudTrail",
        "description": "API call logging service that records all API calls within AWS accounts for security analysis and auditing purposes.",
        "usability": {
            "reviews": [
                "Having a complete history of API calls makes troubleshooting much easier",
                "All the information needed for security audits is automatically recorded",
                "Setup was straightforward and monitoring started immediately"
            ],
            "pros": [
                "Complete API history",
                "Security auditing",
                "Troubleshooting support"
            ],
            "cons": [
                "Large log volumes",
                "Storage costs",
                "Log analysis complexity"
            ]
        }
    },
    "X-Ray": {
        "name": "AWS X-Ray",
        "description": "Distributed tracing service that helps with performance analysis and debugging of microservices applications.",
        "usability": {
            "reviews": [
                "Identifying problem areas in microservices has become much easier",
                "Performance bottlenecks are now visible and actionable",
                "Debugging work has become much more efficient"
            ],
            "pros": [
                "Distributed tracing",
                "Performance visualization",
                "Debugging support"
            ],
            "cons": [
                "Configuration complexity",
                "Performance overhead",
                "Learning curve"
            ]
        }
    },
    "Trusted Advisor": {
        "name": "AWS Trusted Advisor",
        "description": "Optimization recommendation service that analyzes AWS environments for cost optimization, security, performance, and fault tolerance improvements.",
        "usability": {
            "reviews": [
                "Found many helpful cost reduction opportunities",
                "Security improvement recommendations are clear and actionable",
                "Regular checks help us continuously optimize our environment"
            ],
            "pros": [
                "Cost optimization",
                "Security improvements",
                "Automated analysis"
            ],
            "cons": [
                "Business/Enterprise plan limitations",
                "Recommendation accuracy",
                "Implementation effort"
            ]
        }
    },
    "Organizations": {
        "name": "AWS Organizations",
        "description": "Multi-account management service for centrally managing organizational AWS accounts with consolidated billing and policy enforcement.",
        "usability": {
            "reviews": [
                "Centralized management of multiple AWS accounts has simplified operations significantly",
                "Consolidated billing has reduced management overhead",
                "Applying security policies across accounts is very convenient"
            ],
            "pros": [
                "Centralized management",
                "Consolidated billing",
                "Policy governance"
            ],
            "cons": [
                "Complex permission setup",
                "Learning curve",
                "Migration effort"
            ]
        }
    },
    "Control Tower": {
        "name": "AWS Control Tower",
        "description": "Multi-account environment setup service that automatically builds secure and compliant multi-account environments based on best practices.",
        "usability": {
            "reviews": [
                "Automated multi-account environment setup saved us tremendous time",
                "Having best practices applied automatically gives us confidence",
                "Governance mechanisms are built-in from the start"
            ],
            "pros": [
                "Automated setup",
                "Best practices applied",
                "Built-in governance"
            ],
            "cons": [
                "Customization limitations",
                "Initial setup complexity",
                "Cost considerations"
            ]
        }
    },
    "Service Catalog": {
        "name": "AWS Service Catalog",
        "description": "IT service catalog management for creating catalogs of approved AWS resources and enabling self-service deployment within organizations.",
        "usability": {
            "reviews": [
                "Using only approved resources helps maintain governance",
                "Developers can deploy resources themselves, improving efficiency",
                "Centralized template management is very convenient"
            ],
            "pros": [
                "Governed deployment",
                "Self-service",
                "Template management"
            ],
            "cons": [
                "Initial setup effort",
                "Template creation costs",
                "Flexibility limitations"
            ]
        }
    },
    "Well-Architected Tool": {
        "name": "AWS Well-Architected Tool",
        "description": "Architecture assessment tool that evaluates workloads based on the AWS Well-Architected Framework and provides improvement recommendations.",
        "usability": {
            "reviews": [
                "Systematic analysis of architectural issues is very valuable",
                "Improvement recommendations are specific and actionable",
                "Regular reviews have led to continuous system improvements"
            ],
            "pros": [
                "Systematic evaluation",
                "Specific recommendations",
                "Continuous improvement"
            ],
            "cons": [
                "Subjective assessments",
                "Implementation effort",
                "Regular review requirements"
            ]
        }
    },
    "Cost Explorer": {
        "name": "AWS Cost Explorer",
        "description": "Cost analysis and visualization service that provides detailed analysis of AWS usage and costs to support cost optimization efforts.",
        "usability": {
            "reviews": [
                "Detailed cost breakdowns have made budget management much easier",
                "It's immediately clear which services are driving costs",
                "Forecasting capabilities help with future cost planning"
            ],
            "pros": [
                "Detailed cost analysis",
                "Visualization",
                "Forecasting"
            ],
            "cons": [
                "Data delays",
                "Complex filtering",
                "Analysis learning curve"
            ]
        }
    },
    "Budgets": {
        "name": "AWS Budgets",
        "description": "Budget management service for setting budgets on AWS costs and usage with alerts when thresholds are exceeded.",
        "usability": {
            "reviews": [
                "Budget overage alerts help us take action early",
                "Monthly budget management automation is very helpful",
                "Team-specific budget settings were easy to configure"
            ],
            "pros": [
                "Budget management",
                "Automated alerts",
                "Flexible configuration"
            ],
            "cons": [
                "Alert delays",
                "Complex configuration",
                "Forecast accuracy"
            ]
        }
    },
    "Billing": {
        "name": "AWS Billing",
        "description": "Billing management service that manages AWS usage charges and provides detailed invoices and payment information.",
        "usability": {
            "reviews": [
                "Detailed invoices make it clear where costs are coming from",
                "Payment method management is straightforward",
                "All necessary information for tax processing is available"
            ],
            "pros": [
                "Detailed invoices",
                "Payment management",
                "Tax compliance"
            ],
            "cons": [
                "Complex pricing structure",
                "Billing delays",
                "Support limitations"
            ]
        }
    },
    "Marketplace": {
        "name": "AWS Marketplace",
        "description": "Software marketplace for finding, purchasing, and deploying third-party software and services through an online store.",
        "usability": {
            "reviews": [
                "Finding and deploying needed software is straightforward",
                "Consolidated billing makes management easier",
                "Reviews and ratings help with confident selection"
            ],
            "pros": [
                "Rich software selection",
                "Consolidated billing",
                "Reviews and ratings"
            ],
            "cons": [
                "License management",
                "Vendor dependency",
                "Cost management complexity"
            ]
        }
    },
    "License Manager": {
        "name": "AWS License Manager",
        "description": "License management service that tracks software license usage and prevents compliance violations.",
        "usability": {
            "reviews": [
                "License usage visibility has simplified management significantly",
                "Preventing compliance violations gives us peace of mind",
                "License cost optimization benefits are tangible"
            ],
            "pros": [
                "License visibility",
                "Compliance",
                "Cost optimization"
            ],
            "cons": [
                "Limited software support",
                "Configuration complexity",
                "Audit overhead"
            ]
        }
    },
    "Personal Health Dashboard": {
        "name": "AWS Personal Health Dashboard",
        "description": "Personal health dashboard that provides individual notifications about AWS service status and issues affecting your account.",
        "usability": {
            "reviews": [
                "Getting notifications only for issues affecting my resources is efficient",
                "Early notification of issues helps us take preventive action",
                "Advance notice of maintenance schedules is very helpful"
            ],
            "pros": [
                "Personalized notifications",
                "Early warnings",
                "Maintenance information"
            ],
            "cons": [
                "Notification accuracy",
                "Information delays",
                "Limited actions"
            ]
        }
    },
    "Support": {
        "name": "AWS Support",
        "description": "Technical support service offering problem resolution assistance through Basic, Developer, Business, and Enterprise plans.",
        "usability": {
            "reviews": [
                "Technical issues are resolved quickly and effectively",
                "Enterprise plan support is exceptionally comprehensive",
                "Rich documentation makes self-resolution easier"
            ],
            "pros": [
                "Quick response",
                "Expert knowledge",
                "Comprehensive documentation"
            ],
            "cons": [
                "Plan-based limitations",
                "Expensive premium plans",
                "Language limitations"
            ]
        }
    },
    "Resource Groups": {
        "name": "AWS Resource Groups",
        "description": "Resource group management for grouping related AWS resources and enabling bulk management and monitoring.",
        "usability": {
            "reviews": [
                "Grouping related resources makes organization much cleaner",
                "Project-based resource management has become more efficient",
                "Tag-based automatic grouping is very convenient"
            ],
            "pros": [
                "Resource organization",
                "Bulk management",
                "Tag-based"
            ],
            "cons": [
                "Tag management overhead",
                "Complex queries",
                "Limitations"
            ]
        }
    },
    "Tag Editor": {
        "name": "AWS Tag Editor",
        "description": "Bulk tag editing tool for adding, editing, and deleting tags across multiple AWS resources simultaneously.",
        "usability": {
            "reviews": [
                "Bulk editing tags for large numbers of resources has improved work efficiency",
                "Applying consistent tagging rules has become much easier",
                "Cost allocation tagging is now manageable"
            ],
            "pros": [
                "Bulk editing",
                "Efficient operations",
                "Unified management"
            ],
            "cons": [
                "Operation complexity",
                "Irreversible changes",
                "Bulk operation risks"
            ]
        }
    },
    "Application Discovery Service": {
        "name": "AWS Application Discovery Service",
        "description": "Application discovery service that automatically discovers on-premises servers and applications to support migration planning.",
        "usability": {
            "reviews": [
                "Automated inventory of on-premises environment saved significant time",
                "Necessary information for migration planning is collected automatically",
                "Understanding dependencies has reduced migration risks"
            ],
            "pros": [
                "Automated discovery",
                "Migration planning support",
                "Dependency analysis"
            ],
            "cons": [
                "Agent deployment",
                "Privacy concerns",
                "Accuracy limitations"
            ]
        }
    },
    "Migration Hub": {
        "name": "AWS Migration Hub",
        "description": "Migration management hub that provides integrated management of multiple migration tools and centralized tracking of migration project progress.",
        "usability": {
            "reviews": [
                "Migration project progress is visible at a glance, making management easier",
                "Migrations using multiple tools can be managed in an integrated way",
                "Automated migration status reports are very convenient"
            ],
            "pros": [
                "Integrated management",
                "Progress visualization",
                "Automated reporting"
            ],
            "cons": [
                "Limited tool support",
                "Configuration complexity",
                "Real-time limitations"
            ]
        }
    },
    "Database Migration Service": {
        "name": "AWS Database Migration Service",
        "description": "Database migration service that enables data migration between different databases with minimal downtime.",
        "usability": {
            "reviews": [
                "Database migration with virtually no downtime was achieved",
                "Migration between different database types is surprisingly easy",
                "Continuous replication setup is very convenient"
            ],
            "pros": [
                "Minimal downtime",
                "Heterogeneous database support",
                "Continuous replication"
            ],
            "cons": [
                "Complex configuration",
                "Data type conversion",
                "Performance impact"
            ]
        }
    },
    "Server Migration Service": {
        "name": "AWS Server Migration Service",
        "description": "Server migration service providing agentless migration tools for moving on-premises servers to AWS.",
        "usability": {
            "reviews": [
                "Physical server migration was simpler than expected",
                "Agentless approach minimizes impact on existing environments",
                "Phased migration approach helps control risks"
            ],
            "pros": [
                "Agentless",
                "Phased migration",
                "Risk reduction"
            ],
            "cons": [
                "OS support limitations",
                "Network requirements",
                "Migration time"
            ]
        }
    },
    "DataSync": {
        "name": "AWS DataSync",
        "description": "Data transfer service that automates and accelerates data transfer between on-premises and AWS, or between AWS services.",
        "usability": {
            "reviews": [
                "High-speed transfer of large amounts of data was very helpful",
                "Transfer progress visualization provides reassurance",
                "Scheduled execution makes regular synchronization easy"
            ],
            "pros": [
                "High-speed transfer",
                "Progress visualization",
                "Scheduled execution"
            ],
            "cons": [
                "Initial setup",
                "Network dependency",
                "Transfer costs"
            ]
        }
    },
    "Direct Connect": {
        "name": "AWS Direct Connect",
        "description": "Dedicated network connection service that provides stable, high-speed communication between on-premises and AWS through dedicated network connections.",
        "usability": {
            "reviews": [
                "More stable connection than internet-based connectivity",
                "High-capacity data transfer has become much faster",
                "Security aspects provide confidence"
            ],
            "pros": [
                "Stable connection",
                "High-speed communication",
                "Secure"
            ],
            "cons": [
                "High cost",
                "Implementation time",
                "Physical constraints"
            ]
        }
    },
    "Transit Gateway": {
        "name": "AWS Transit Gateway",
        "description": "Network transit service that simplifies network management by connecting multiple VPCs and on-premises networks through a central hub.",
        "usability": {
            "reviews": [
                "Complex network configurations have been simplified",
                "Centralized VPC connection management is very convenient",
                "High scalability provides future-proofing"
            ],
            "pros": [
                "Network simplification",
                "Centralized management",
                "Scalable"
            ],
            "cons": [
                "Additional costs",
                "Configuration complexity",
                "Single point of failure"
            ]
        }
    },
    "PrivateLink": {
        "name": "AWS PrivateLink",
        "description": "Private connection service that enables private network communication between VPCs and AWS services without internet transit.",
        "usability": {
            "reviews": [
                "Private connections to AWS services provide peace of mind",
                "Internet gateway is no longer required",
                "Works well in security-sensitive environments"
            ],
            "pros": [
                "Private connectivity",
                "Secure",
                "No IGW required"
            ],
            "cons": [
                "Additional costs",
                "Limited service support",
                "Configuration complexity"
            ]
        }
    },
    "Global Accelerator": {
        "name": "AWS Global Accelerator",
        "description": "Global network optimization service that improves application performance by leveraging AWS's global network infrastructure.",
        "usability": {
            "reviews": [
                "Access speeds from around the world have improved",
                "Automatic network optimization is very convenient",
                "Improved availability has stabilized our service"
            ],
            "pros": [
                "Performance improvement",
                "Automatic optimization",
                "High availability"
            ],
            "cons": [
                "Additional costs",
                "Configuration complexity",
                "Regional limitations"
            ]
        }
    },
    "App Mesh": {
        "name": "AWS App Mesh",
        "description": "Service mesh that manages communication between microservices, providing visibility, traffic control, and security.",
        "usability": {
            "reviews": [
                "Visibility into microservice communication is very helpful",
                "Fine-grained traffic control configuration is convenient",
                "Enhanced security provides confidence"
            ],
            "pros": [
                "Communication visibility",
                "Traffic control",
                "Security enhancement"
            ],
            "cons": [
                "Learning curve",
                "Configuration complexity",
                "Performance overhead"
            ]
        }
    },
    "Cloud Map": {
        "name": "AWS Cloud Map",
        "description": "Service discovery service that provides name resolution and service discovery for dynamically changing cloud resources.",
        "usability": {
            "reviews": [
                "Automated dynamic service discovery is very convenient",
                "Microservice management has become easier",
                "Integrated health check functionality provides assurance"
            ],
            "pros": [
                "Automated service discovery",
                "Dynamic management",
                "Health check integration"
            ],
            "cons": [
                "Configuration complexity",
                "Learning curve",
                "DNS dependency"
            ]
        }
    },
    "EventBridge": {
        "name": "Amazon EventBridge",
        "description": "Event-driven architecture service that distributes events between applications and supports loosely coupled system construction.",
        "usability": {
            "reviews": [
                "Event-driven mechanisms were easy to build",
                "System decoupling has improved maintainability",
                "Rule-based event processing is flexible"
            ],
            "pros": [
                "Event-driven",
                "Loose coupling",
                "Flexible rules"
            ],
            "cons": [
                "Debugging difficulties",
                "Event ordering",
                "Learning curve"
            ]
        }
    },
    "Step Functions": {
        "name": "AWS Step Functions",
        "description": "Workflow management service that visually defines and manages workflows combining multiple AWS services.",
        "usability": {
            "reviews": [
                "Complex workflows can be managed visually, making them easy to understand",
                "Built-in error handling provides high reliability",
                "Combination with Lambda creates powerful systems"
            ],
            "pros": [
                "Visual management",
                "Error handling",
                "Service integration"
            ],
            "cons": [
                "State management complexity",
                "Debugging difficulties",
                "Execution costs"
            ]
        }
    },
    "Batch": {
        "name": "AWS Batch",
        "description": "Batch processing service that efficiently executes large-scale parallel batch jobs with automatic compute resource management.",
        "usability": {
            "reviews": [
                "Large-scale batch processing can now be executed efficiently",
                "Automated resource management makes operations easier",
                "Pay-per-use pricing is economical"
            ],
            "pros": [
                "Efficient parallel processing",
                "Automated resource management",
                "Pay-per-use"
            ],
            "cons": [
                "Configuration complexity",
                "Debugging difficulties",
                "Startup time"
            ]
        }
    },
    "Fargate": {
        "name": "AWS Fargate",
        "description": "Serverless container execution service that runs containers without server management, used in combination with ECS or EKS.",
        "usability": {
            "reviews": [
                "Running containers without server management is revolutionary",
                "Automatic scaling is very convenient",
                "Security isolation provides confidence"
            ],
            "pros": [
                "Serverless",
                "Auto-scaling",
                "Security isolation"
            ],
            "cons": [
                "Higher costs",
                "Customization limitations",
                "Cold starts"
            ]
        }
    },
    "Lightsail": {
        "name": "Amazon Lightsail",
        "description": "Simple VPS service that provides virtual private servers with predictable pricing, ideal for small websites and applications.",
        "usability": {
            "reviews": [
                "Small websites were easy to launch",
                "Predictable pricing makes budget management easier",
                "Simple configuration is beginner-friendly"
            ],
            "pros": [
                "Easy setup",
                "Predictable pricing",
                "Beginner-friendly"
            ],
            "cons": [
                "Feature limitations",
                "Scalability limits",
                "Customization restrictions"
            ]
        }
    },
    "Outposts": {
        "name": "AWS Outposts",
        "description": "On-premises AWS service that deploys AWS infrastructure and services in on-premises environments for hybrid cloud implementation.",
        "usability": {
            "reviews": [
                "Using AWS services on-premises is very convenient",
                "Perfect for latency-sensitive applications",
                "Consistent operations between cloud and on-premises"
            ],
            "pros": [
                "On-premises AWS",
                "Low latency",
                "Consistent operations"
            ],
            "cons": [
                "High cost",
                "Physical constraints",
                "Maintenance complexity"
            ]
        }
    },
    "Local Zones": {
        "name": "AWS Local Zones",
        "description": "Edge computing service with AWS infrastructure deployed in major cities to support applications requiring ultra-low latency.",
        "usability": {
            "reviews": [
                "Perfect for applications requiring ultra-low latency",
                "Can provide services closer to users",
                "Real-time processing performance has improved dramatically"
            ],
            "pros": [
                "Ultra-low latency",
                "Edge processing",
                "Real-time support"
            ],
            "cons": [
                "Limited locations",
                "Service restrictions",
                "High cost"
            ]
        }
    },
    "Wavelength": {
        "name": "AWS Wavelength",
        "description": "5G edge computing service deployed at the edge of 5G networks to enable ultra-low latency for mobile applications.",
        "usability": {
            "reviews": [
                "Revolutionary service for 5G application development",
                "Response times to mobile users have improved dramatically",
                "Edge processing enables new user experiences"
            ],
            "pros": [
                "5G support",
                "Ultra-low latency",
                "Mobile optimized"
            ],
            "cons": [
                "Limited carrier support",
                "Regional restrictions",
                "New technology risks"
            ]
        }
    },
    "CDK": {
        "name": "AWS Cloud Development Kit",
        "description": "An open-source software development framework for defining and deploying AWS resources using familiar programming languages like TypeScript, Python, Java, and C#.",
        "usability": {
            "reviews": [
                "Managing infrastructure as code makes version control and reviews much easier",
                "Being able to write in familiar programming languages is a huge advantage",
                "Much more intuitive and developer-friendly compared to CloudFormation"
            ],
            "pros": [
                "Programming language support",
                "Type safety and IDE support",
                "Reusable components",
                "CloudFormation compatibility"
            ],
            "cons": [
                "Learning curve",
                "Deployment time",
                "Debugging complexity"
            ]
        }
    },
    "Amazon Aurora": {
        "name": "Amazon Aurora",
        "description": "A cloud-native relational database built by AWS, compatible with MySQL and PostgreSQL, offering up to 5x better performance than traditional databases with high availability and scalability.",
        "usability": {
            "reviews": [
                "The performance is truly outstanding, response times improved dramatically",
                "Automatic failover works excellently with minimal downtime",
                "Fast backup and restore capabilities make operations much easier"
            ],
            "pros": [
                "High performance",
                "Auto-scaling",
                "High availability",
                "MySQL/PostgreSQL compatibility",
                "Serverless support"
            ],
            "cons": [
                "Higher cost",
                "Vendor lock-in",
                "Regional limitations",
                "Configuration complexity"
            ]
        }
    },
    "Savings Plans": {
        "name": "AWS Savings Plans",
        "description": "A flexible pricing model that offers significant savings on AWS usage by committing to a consistent amount of usage for 1 or 3 years, providing up to 72% savings compared to On-Demand pricing across EC2, Lambda, Fargate, and more.",
        "usability": {
            "reviews": [
                "If you have long-term usage planned, the cost savings are truly substantial",
                "More flexible than Reserved Instances - discounts apply even when changing instance types",
                "Calculations can be complex, but Cost Explorer's recommendations are very helpful"
            ],
            "pros": [
                "Significant cost savings",
                "Flexibility (instance type changes allowed)",
                "Applies to multiple services",
                "Automatic application",
                "Cost Explorer optimization recommendations"
            ],
            "cons": [
                "Long-term commitment required",
                "Complex calculations",
                "Difficult usage forecasting",
                "No early termination"
            ]
        }
    },
    "Spot Instances": {
        "name": "Amazon EC2 Spot Instances",
        "description": "EC2 instances that use spare AWS capacity at up to 90% discount compared to On-Demand prices. Pricing fluctuates based on supply and demand, and instances can be interrupted when capacity is needed elsewhere.",
        "usability": {
            "reviews": [
                "Perfect for batch processing and test environments - costs drop dramatically",
                "Great for stateless workloads since interruption is possible",
                "Takes some getting used to monitoring price fluctuations, but becomes indispensable"
            ],
            "pros": [
                "Massive cost savings (up to 90% off)",
                "Perfect for large-scale parallel processing",
                "Flexible pricing",
                "Auto Scaling integration"
            ],
            "cons": [
                "Instance interruption risk",
                "Price volatility",
                "Availability uncertainty",
                "Not suitable for stateful applications"
            ]
        }
    },
    "Reserved Instances": {
        "name": "Amazon EC2 Reserved Instances",
        "description": "A pricing option that provides up to 75% discount compared to On-Demand pricing by committing to use EC2 instances for 1 or 3 years. Reservations are made for specific instance types, regions, and tenancy.",
        "usability": {
            "reviews": [
                "If you plan to use the same instance type long-term, the cost savings are tremendous",
                "Can't change the reserved instance type, so upfront planning is crucial",
                "Understanding the difference between Standard RI and Convertible RI is key to choosing right"
            ],
            "pros": [
                "Significant cost savings (up to 75% off)",
                "Predictable pricing",
                "Capacity reservation",
                "Three payment options",
                "Marketplace trading available"
            ],
            "cons": [
                "Long-term commitment required",
                "Limited flexibility",
                "Difficult usage forecasting",
                "No early termination",
                "Instance type change restrictions"
            ]
        }
    },
    "Security Groups": {
        "name": "Amazon EC2 Security Groups",
        "description": "Virtual firewalls that operate at the EC2 instance level, controlling inbound and outbound traffic with stateful connection tracking. By default, all inbound traffic is denied and all outbound traffic is allowed.",
        "usability": {
            "reviews": [
                "Intuitive configuration makes it great as a network security foundation",
                "Stateful nature automatically allows return traffic, which is very convenient",
                "Can combine multiple security groups for flexible access control"
            ],
            "pros": [
                "Stateful connection tracking",
                "Instance-level control",
                "Real-time application",
                "Multiple group combinations possible",
                "Secure default settings"
            ],
            "cons": [
                "Cannot set deny rules",
                "No logging capability",
                "No subnet-level control",
                "Rule number limitations"
            ]
        }
    },
    "Network ACL": {
        "name": "Network Access Control List",
        "description": "Stateless firewall operating at the subnet level, evaluating traffic based on numbered rules with both allow and deny rules possible. Applied to entire VPC subnets as an additional security layer.",
        "usability": {
            "reviews": [
                "Can protect entire subnets, making it important for defense in depth",
                "Being stateless requires explicit configuration of both inbound and outbound rules",
                "Ability to set deny rules makes it convenient for blocking specific IP addresses"
            ],
            "pros": [
                "Subnet-level control",
                "Deny rules configurable",
                "Stateless control",
                "Numbered rule priorities",
                "Additional security layer"
            ],
            "cons": [
                "Complex configuration",
                "Risk of configuration gaps due to stateless nature",
                "Difficult debugging",
                "Performance impact"
            ]
        }
    },
    "ALB": {
        "name": "Application Load Balancer",
        "description": "Layer 7 (application layer) load balancer that distributes HTTP/HTTPS traffic across multiple targets with path-based and host-based routing capabilities.",
        "usability": {
            "reviews": [
                "Path-based routing is very convenient and perfect for microservices architecture",
                "WebSocket and HTTP/2 support makes it great for modern applications",
                "Health check features are comprehensive and failover is quick"
            ],
            "pros": [
                "Advanced routing features",
                "WebSocket & HTTP/2 support",
                "SSL termination",
                "Detailed metrics",
                "Auto Scaling integration"
            ],
            "cons": [
                "Higher cost than NLB",
                "More processing overhead than Layer 4",
                "Configuration complexity"
            ]
        }
    },
    "Elastic Transcoder": {
        "name": "Amazon Elastic Transcoder",
        "description": "Cloud-based media conversion service that transcodes video and audio files for various devices and resolutions. Integrates with S3 for scalable processing.",
        "usability": {
            "reviews": [
                "Video conversion setup is simple and supports various formats",
                "S3 integration is smooth and handles large video processing reliably",
                "Pay-as-you-go pricing makes cost management easy"
            ],
            "pros": [
                "Rich output formats",
                "Automatic S3 integration",
                "Scalable processing",
                "Pay-per-use pricing",
                "Preset configurations"
            ],
            "cons": [
                "No real-time processing",
                "Limited customization",
                "Unpredictable processing time"
            ]
        }
    },
    "Route 53": {
        "name": "Amazon Route 53",
        "description": "Highly available and scalable DNS web service providing domain registration, DNS management, health checks, and traffic routing.",
        "usability": {
            "reviews": [
                "DNS configuration UI is intuitive and beginner-friendly",
                "Health check features provide automatic failover capabilities",
                "Latency-based routing improved our application performance"
            ],
            "pros": [
                "High availability",
                "Rich routing features",
                "Health checks",
                "Domain registration support",
                "AWS service integration"
            ],
            "cons": [
                "Complex pricing structure",
                "Learning curve",
                "Domain transfer complexity"
            ]
        }
    },
    "S3 One Zone-IA": {
        "name": "S3 One Zone-Infrequent Access",
        "description": "S3 storage class that stores data in a single Availability Zone for infrequently accessed data at lower cost. 20% cheaper than Standard-IA.",
        "usability": {
            "reviews": [
                "Backup data storage costs reduced significantly",
                "Single AZ has risks but optimal for cost-focused scenarios",
                "Using it for infrequently accessed log files"
            ],
            "pros": [
                "Low cost",
                "Immediate access",
                "Cheaper than S3 Standard-IA",
                "Lifecycle management support"
            ],
            "cons": [
                "Single AZ risk",
                "Retrieval charges",
                "30-day minimum storage",
                "Lower availability than Standard"
            ]
        }
    },
    "S3 Standard": {
        "name": "S3 Standard",
        "description": "Most common S3 storage class for frequently accessed data, providing high durability and availability. Automatically replicates data across multiple AZs.",
        "usability": {
            "reviews": [
                "Most basic storage class that you can rely on",
                "Stable performance, perfect for web applications",
                "Higher cost but excellent reliability"
            ],
            "pros": [
                "High availability",
                "Immediate access",
                "Multi-AZ automatic replication",
                "High performance",
                "No retrieval charges"
            ],
            "cons": [
                "High storage cost",
                "Uneconomical for infrequent access",
                "Lifecycle management required"
            ]
        }
    },
    "S3 Glacier Deep Archive": {
        "name": "S3 Glacier Deep Archive",
        "description": "Lowest-cost S3 storage class for long-term archive data accessed 1-2 times per year. Takes 12 hours to retrieve but offers the lowest price.",
        "usability": {
            "reviews": [
                "Audit log storage costs dropped dramatically for long-term retention",
                "Takes time to retrieve but perfect for non-urgent data",
                "Great for compliance data storage requirements"
            ],
            "pros": [
                "Lowest cost",
                "Optimal for long-term storage",
                "High durability",
                "Compliance support"
            ],
            "cons": [
                "12-hour retrieval time",
                "High retrieval charges",
                "180-day minimum storage",
                "No immediate access"
            ]
        }
    },
    "S3 Standard-IA": {
        "name": "S3 Standard-Infrequent Access",
        "description": "S3 storage class for infrequently accessed data. Cheaper than S3 Standard but charges for data retrieval. Replicates across multiple AZs.",
        "usability": {
            "reviews": [
                "Using it for monthly reports and periodically accessed data",
                "Cheaper than Standard and immediately accessible when needed",
                "Set up automatic transition with lifecycle policies"
            ],
            "pros": [
                "Lower cost than Standard",
                "Immediate access",
                "Multi-AZ replication",
                "Lifecycle management support"
            ],
            "cons": [
                "Data retrieval charges",
                "30-day minimum storage",
                "Not suitable for frequent access",
                "128KB minimum billable size"
            ]
        }
    },
    "AWS Import/Export": {
        "name": "AWS Import/Export",
        "description": "Service for transferring large amounts of data to AWS using physical storage devices. Faster than internet transfer and saves network bandwidth. Now integrated into Snowball family.",
        "usability": {
            "reviews": [
                "Terabyte-scale data migration was much faster than network transfer",
                "This service was very helpful during initial cloud migration",
                "Now replaced by Snowball but the concept remains the same"
            ],
            "pros": [
                "Large data transfer",
                "High-speed transfer",
                "Network bandwidth savings",
                "Secure transfer"
            ],
            "cons": [
                "Physical shipping required",
                "Time-consuming",
                "Currently deprecated",
                "Migrated to Snowball"
            ]
        }
    },
    "AWS OpsWorks Stacks": {
        "name": "AWS OpsWorks Stacks",
        "description": "Application management service using Chef Solo. Manages infrastructure and application lifecycle with layer-based architecture.",
        "usability": {
            "reviews": [
                "With Chef knowledge, complex application configurations are manageable",
                "Layer concept clarifies role separation and simplifies operations",
                "Systems Manager seems to be more mainstream now"
            ],
            "pros": [
                "Chef integration",
                "Layer-based management",
                "Auto scaling",
                "Lifecycle management",
                "Monitoring integration"
            ],
            "cons": [
                "Chef knowledge required",
                "High learning curve",
                "Currently deprecated trend",
                "Systems Manager recommended"
            ]
        }
    },
    "AWS STS": {
        "name": "AWS Security Token Service",
        "description": "Service that provides temporary security credentials. Used for IAM role assumption and federated authentication. Issues short-term valid credentials.",
        "usability": {
            "reviews": [
                "Temporary credentials significantly improved security",
                "Cross-account access implementation becomes simpler",
                "Powerful combination with federated authentication"
            ],
            "pros": [
                "Temporary credentials",
                "High security",
                "Cross-account support",
                "Federation support",
                "Automatic expiration"
            ],
            "cons": [
                "Conceptual complexity",
                "Debugging difficulties",
                "Expiration management",
                "Configuration complexity"
            ]
        }
    },
    "Snowball": {
        "name": "AWS Snowball",
        "description": "Physical data transfer device for moving large amounts of data to AWS. Available in 80TB or 50TB capacity with encrypted storage.",
        "usability": {
            "reviews": [
                "Petabyte-scale data migration was smoother than expected",
                "Enables large-capacity transfers impossible via network",
                "Security is solid, feel confident entrusting data"
            ],
            "pros": [
                "Large data transfer",
                "High-speed transfer",
                "Encryption support",
                "Network bandwidth savings",
                "Secure transfer"
            ],
            "cons": [
                "Physical shipping required",
                "Shipping time",
                "Device usage fees",
                "Regional limitations"
            ]
        }
    },
    "Storage Gateway": {
        "name": "AWS Storage Gateway",
        "description": "Hybrid cloud storage service connecting on-premises environments to AWS cloud storage. Provides file, volume, and tape gateways.",
        "usability": {
            "reviews": [
                "Gradual migration from on-premises to cloud is very helpful",
                "Can use existing backup systems as-is, very convenient",
                "Hybrid configuration allows cloud benefits while maintaining operations"
            ],
            "pros": [
                "Hybrid support",
                "Existing system utilization",
                "Gradual migration possible",
                "Multiple gateway types",
                "On-premises integration"
            ],
            "cons": [
                "Configuration complexity",
                "Network dependency",
                "Initial setup costs",
                "Operational management complexity"
            ]
        }
    },
    "ECR": {
        "name": "Amazon Elastic Container Registry",
        "description": "Fully managed Docker container registry service for storing and managing container images. Integrates with ECS and EKS for container deployment.",
        "usability": {
            "reviews": [
                "Centralized Docker image management makes deployment much easier",
                "Smooth integration with ECS makes container operations efficient",
                "Private registry provides security confidence"
            ],
            "pros": [
                "Fully managed",
                "ECS/EKS integration",
                "Private registry",
                "Image scanning",
                "Lifecycle management"
            ],
            "cons": [
                "Storage costs",
                "Transfer charges",
                "Regional limitations",
                "Limited features vs Docker Hub"
            ]
        }
    },
    "NATゲートウェイ": {
        "name": "NAT Gateway",
        "description": "Managed NAT service for instances in private subnets to access the internet. Provides high availability and high bandwidth.",
        "usability": {
            "reviews": [
                "Safe internet access from private subnets",
                "Managed service eliminates operational overhead",
                "High availability guarantee provides confidence"
            ],
            "pros": [
                "Managed service",
                "High availability",
                "High bandwidth",
                "Auto scaling",
                "Security"
            ],
            "cons": [
                "Cost",
                "Data transfer charges",
                "Single AZ deployment",
                "Configuration complexity"
            ]
        }
    },
    "VPCエンドポイント": {
        "name": "VPC Endpoint",
        "description": "Endpoint for private connection from VPC to AWS services. Enables secure access without internet gateway.",
        "usability": {
            "reviews": [
                "Private network access to S3 and DynamoDB is secure",
                "No internet gateway needed, improving security",
                "Data transfer cost savings provide tangible benefits"
            ],
            "pros": [
                "Private connectivity",
                "Security improvement",
                "Data transfer cost reduction",
                "No internet required",
                "High availability"
            ],
            "cons": [
                "Endpoint charges",
                "Configuration complexity",
                "Limited service support",
                "DNS configuration required"
            ]
        }
    },
    "VPCピアリング": {
        "name": "VPC Peering",
        "description": "Service to connect different VPCs via private network. Supports same region, cross-region, and cross-account connections.",
        "usability": {
            "reviews": [
                "Private communication between multiple VPCs improves security",
                "Cross-account connections are easy to configure",
                "Network design flexibility improved significantly"
            ],
            "pros": [
                "Private connectivity",
                "Cross-account support",
                "Cross-region support",
                "Low latency",
                "Security"
            ],
            "cons": [
                "Data transfer charges",
                "Routing configuration",
                "No IP overlap allowed",
                "No transitive routing"
            ]
        }
    },
    "DynamoDB": {
        "name": "Amazon DynamoDB",
        "description": "High-performance NoSQL database service providing millisecond latency and automatic scaling, perfect for serverless applications.",
        "usability": {
            "reviews": [
                "Response times are incredibly fast, significantly improving user experience",
                "Not having to worry about scaling is such a relief",
                "Setup was straightforward and we were up and running quickly"
            ],
            "pros": [
                "Fast performance",
                "Auto-scaling",
                "Serverless",
                "Managed service",
                "Global tables"
            ],
            "cons": [
                "Query limitations",
                "Complex pricing",
                "Learning curve",
                "No SQL support"
            ]
        }
    },
    "KMS": {
        "name": "AWS Key Management Service",
        "description": "Managed service for creating and managing encryption keys. Integrates with AWS services to easily implement data encryption and decryption.",
        "usability": {
            "reviews": [
                "Centralized encryption key management improved security",
                "Integration with other AWS services is simple and easy to implement",
                "Automatic audit logging makes compliance easier"
            ],
            "pros": [
                "Managed service",
                "AWS service integration",
                "Audit logging",
                "Key rotation",
                "Fine-grained access control"
            ],
            "cons": [
                "API call charges",
                "Key management complexity",
                "Regional limitations",
                "Learning curve"
            ]
        }
    },
    "リージョン": {
        "name": "AWS Region",
        "description": "Geographic area where AWS services are provided. Composed of multiple Availability Zones for disaster recovery and legal compliance.",
        "usability": {
            "reviews": [
                "Choosing geographically close regions improved latency",
                "Clear data location helps meet compliance requirements",
                "Using multiple regions for disaster recovery"
            ],
            "pros": [
                "Low latency",
                "Data sovereignty",
                "Disaster recovery",
                "Legal compliance",
                "Service availability"
            ],
            "cons": [
                "Data transfer charges",
                "Service differences",
                "Management complexity",
                "Cost increase"
            ]
        }
    },
    "AZ": {
        "name": "Availability Zone",
        "description": "Physically separated data center groups within a region. Basic unit for achieving high availability and fault tolerance.",
        "usability": {
            "reviews": [
                "Distributing resources across multiple AZs achieved high availability",
                "Service continues even if one AZ fails, providing confidence",
                "Low network latency doesn't impact performance"
            ],
            "pros": [
                "High availability",
                "Fault tolerance",
                "Low latency",
                "Independent power and network",
                "Automatic failover"
            ],
            "cons": [
                "Data transfer charges",
                "Design complexity",
                "Cost increase",
                "Synchronization challenges"
            ]
        }
    },
    "CloudWatch Insights": {
        "name": "CloudWatch Insights",
        "description": "Service for interactive search and analysis of CloudWatch Logs data. Enables detailed log analysis with SQL-like query language.",
        "usability": {
            "reviews": [
                "Log analysis became much easier, problem identification is faster",
                "SQL-like queries are intuitive and convenient",
                "Visualization features show log trends at a glance"
            ],
            "pros": [
                "Interactive analysis",
                "SQL-like queries",
                "Visualization features",
                "Real-time analysis",
                "Automatic sampling"
            ],
            "cons": [
                "Query execution charges",
                "Learning curve",
                "Performance with large data",
                "Retention period limits"
            ]
        }
    },
    "CloudWatch Container Insights": {
        "name": "CloudWatch Container Insights",
        "description": "Service for collecting and monitoring metrics and logs from containerized applications and microservices. Supports ECS, EKS, and Fargate.",
        "usability": {
            "reviews": [
                "Detailed container-level monitoring is now possible",
                "Microservice performance issues are easier to identify",
                "Clear dashboards make operations more efficient"
            ],
            "pros": [
                "Container-specific monitoring",
                "Microservice support",
                "Automatic metrics collection",
                "Detailed dashboards",
                "Alert functionality"
            ],
            "cons": [
                "Additional costs",
                "Configuration complexity",
                "Increased data volume",
                "Learning curve"
            ]
        }
    },
    "RDSプロキシ": {
        "name": "Amazon RDS Proxy",
        "description": "Fully managed service for managing and pooling connections to RDS databases. Improves connection efficiency and reduces failover time.",
        "usability": {
            "reviews": [
                "Automated database connection management makes operations easier",
                "Stable connections from Lambda functions improved performance",
                "Reduced failover time improved availability"
            ],
            "pros": [
                "Connection pooling",
                "Faster failover",
                "Lambda optimization",
                "Security improvement",
                "Managed service"
            ],
            "cons": [
                "Additional costs",
                "Increased latency",
                "Limited engine support",
                "Configuration complexity"
            ]
        }
    },
    "S3リクエスタ支払い": {
        "name": "S3 Requester Pays",
        "description": "Feature where requesters pay for S3 bucket access charges. Data providers pay only storage costs while users pay access charges.",
        "usability": {
            "reviews": [
                "Cost burden reduced when providing large data sets",
                "Fair pricing structure where data users pay transfer costs",
                "Simple configuration, easy to enable"
            ],
            "pros": [
                "Fair cost distribution",
                "Reduced provider burden",
                "Simple configuration",
                "Access control",
                "Audit logging"
            ],
            "cons": [
                "Increased user costs",
                "Configuration understanding required",
                "Access method limitations",
                "Management complexity"
            ]
        }
    },
    "EMR": {
        "name": "Amazon EMR",
        "description": "Managed cluster service for running big data frameworks like Apache Spark, Hadoop, and HBase. Streamlines large-scale data processing and analysis.",
        "usability": {
            "reviews": [
                "Large-scale data processing became simple",
                "Automated Spark cluster management makes operations easier",
                "Cost-efficient, can start clusters only when needed"
            ],
            "pros": [
                "Managed clusters",
                "Multiple framework support",
                "Auto scaling",
                "Cost efficiency",
                "S3 integration"
            ],
            "cons": [
                "Learning curve",
                "Configuration complexity",
                "Startup time",
                "Version management"
            ]
        }
    },
    "Amazon AppFlow": {
        "name": "Amazon AppFlow",
        "description": "Fully managed data integration service for securely transferring data between SaaS applications and AWS services. Supports Salesforce, Slack, and more.",
        "usability": {
            "reviews": [
                "Automated data transfer from Salesforce to S3 is convenient",
                "No-code data integration reduces development effort",
                "Scheduled execution makes regular data sync simple"
            ],
            "pros": [
                "No-code integration",
                "Multiple SaaS support",
                "Automatic scheduling",
                "Data transformation",
                "Security"
            ],
            "cons": [
                "Limited app support",
                "Transfer charges",
                "Customization limits",
                "Real-time limitations"
            ]
        }
    },
    "Amazon Transcribe": {
        "name": "Amazon Transcribe",
        "description": "Automatic speech recognition service that converts speech to text. Supports multiple languages with custom vocabulary and speaker identification features.",
        "usability": {
            "reviews": [
                "Automatic meeting transcription makes minute-taking easier",
                "Japanese recognition accuracy is high and practically usable",
                "Custom vocabulary accurately recognizes technical terms"
            ],
            "pros": [
                "High-accuracy speech recognition",
                "Multi-language support",
                "Custom vocabulary",
                "Speaker identification",
                "Real-time processing"
            ],
            "cons": [
                "Processing time charges",
                "Audio quality dependent",
                "Dialect/accent limitations",
                "Technical term challenges"
            ]
        }
    },
    "Amazon QLDB": {
        "name": "Amazon Quantum Ledger Database",
        "description": "Fully managed ledger database providing cryptographically verifiable change history, ensuring data integrity and transparency.",
        "usability": {
            "reviews": [
                "Complete protection of data change history meets audit requirements",
                "Simpler than blockchain, optimal as centralized ledger",
                "SQL-like queries are user-friendly with low learning curve"
            ],
            "pros": [
                "Change history integrity",
                "Cryptographic verification",
                "SQL-like",
                "Managed service",
                "High performance"
            ],
            "cons": [
                "Limited to specific use cases",
                "Learning curve",
                "Pricing structure",
                "Limited ecosystem"
            ]
        }
    },
    "AWS Backup": {
        "name": "AWS Backup",
        "description": "Fully managed service for centralized backup management across AWS services. Enables policy-based backup automation and restoration.",
        "usability": {
            "reviews": [
                "Centralized backup management for multiple AWS services is convenient",
                "Policy-based automatic backup is easy to configure",
                "Intuitive restore operations enable quick disaster response"
            ],
            "pros": [
                "Centralized management",
                "Policy-based",
                "Automation",
                "Cross-region support",
                "Compliance"
            ],
            "cons": [
                "Backup costs",
                "Restore time",
                "Limited service support",
                "Configuration complexity"
            ]
        }
    },
    "Bedrock": {
        "name": "Amazon Bedrock",
        "description": "Fully managed service for building generative AI applications. Provides access to foundation models like Claude, Llama, and Titan through APIs.",
        "usability": {
            "reviews": [
                "Easy to experiment with multiple AI models and choose the right one for each use case",
                "Unified API makes it simple to switch between different models",
                "Security and privacy considerations are well thought out"
            ],
            "pros": [
                "Multiple foundation models",
                "Unified API",
                "Security focused",
                "Scalable",
                "Fine-tuning support"
            ],
            "cons": [
                "Cost",
                "Regional limitations",
                "Model dependency",
                "Response latency"
            ]
        }
    },
    "Security Hub": {
        "name": "AWS Security Hub",
        "description": "Centralized security management service. Aggregates findings from multiple security services and provides unified security posture visibility.",
        "usability": {
            "reviews": [
                "Security status is now visible at a glance",
                "Convenient to integrate results from multiple security tools",
                "Compliance requirement checks became more efficient"
            ],
            "pros": [
                "Centralized management",
                "Unified dashboard",
                "Compliance support",
                "Automation ready",
                "Custom insights"
            ],
            "cons": [
                "Configuration complexity",
                "Cost",
                "Learning curve",
                "Alert fatigue"
            ]
        }
    },
    "Amazon Q in Connect": {
        "name": "Amazon Q in Connect",
        "description": "AI assistant for Amazon Connect contact centers. Provides real-time recommendations and answers to improve agent productivity.",
        "usability": {
            "reviews": [
                "Agent response quality improved and customer satisfaction increased",
                "Real-time information provision is extremely helpful",
                "Training time for new agents was reduced"
            ],
            "pros": [
                "Real-time assistance",
                "Productivity improvement",
                "Quality enhancement",
                "Learning capabilities",
                "Connect integration"
            ],
            "cons": [
                "Cost",
                "Configuration complexity",
                "Language limitations",
                "Dependency"
            ]
        }
    },
    "IAM Identity Center": {
        "name": "AWS IAM Identity Center",
        "description": "Provides single sign-on (SSO) to multiple AWS accounts and applications. Formerly known as AWS SSO.",
        "usability": {
            "reviews": [
                "Convenient to centralize access to multiple AWS accounts",
                "SSO achieved both security and convenience",
                "Integration with Active Directory was smooth"
            ],
            "pros": [
                "Single sign-on",
                "Centralized management",
                "External identity integration",
                "Security improvement",
                "User experience"
            ],
            "cons": [
                "Configuration complexity",
                "Migration cost",
                "Dependency",
                "Limitations"
            ]
        }
    },
    "Lambda@Edge": {
        "name": "AWS Lambda@Edge",
        "description": "Runs Lambda functions at CloudFront edge locations. Enables content customization closer to users.",
        "usability": {
            "reviews": [
                "Edge processing significantly improved response times",
                "Dynamic content delivery is easily achievable",
                "A/B testing implementation became more efficient"
            ],
            "pros": [
                "Low latency",
                "Global distribution",
                "Dynamic processing",
                "CloudFront integration",
                "Cost efficient"
            ],
            "cons": [
                "Execution time limits",
                "Memory limits",
                "Debugging difficulties",
                "Regional restrictions"
            ]
        }
    },
    "CloudFront Functions": {
        "name": "CloudFront Functions",
        "description": "Runs lightweight JavaScript functions at CloudFront edge locations. Faster and more cost-effective than Lambda@Edge.",
        "usability": {
            "reviews": [
                "Perfect for lightweight processing and cost-effective",
                "Response times were further reduced",
                "Convenient for simple redirects and header manipulation"
            ],
            "pros": [
                "Ultra-low latency",
                "Low cost",
                "High throughput",
                "Simple implementation",
                "CloudFront integration"
            ],
            "cons": [
                "Feature limitations",
                "JavaScript only",
                "Execution time limits",
                "Debugging limitations"
            ]
        }
    },
    "CLB": {
        "name": "Classic Load Balancer",
        "description": "Legacy load balancer operating at both Layer 4 and Layer 7. Provides compatibility with EC2-Classic. No longer receiving new features.",
        "usability": {
            "reviews": [
                "Compatibility with legacy systems was helpful during migration",
                "Simple configuration for basic load balancing",
                "Considering migration to newer ALB or NLB"
            ],
            "pros": [
                "Simple",
                "EC2-Classic support",
                "Layer 4/7 support",
                "Proven track record"
            ],
            "cons": [
                "Feature limitations",
                "No new features",
                "Performance limitations",
                "Not recommended"
            ]
        }
    },
    "Amazon QuickSight": {
        "name": "Amazon QuickSight",
        "description": "Cloud-native business intelligence (BI) service. Enables easy data visualization and dashboard creation.",
        "usability": {
            "reviews": [
                "Intuitive interface for creating dashboards",
                "Convenient to connect to various data sources",
                "Mobile-friendly and accessible on the go"
            ],
            "pros": [
                "Intuitive UI",
                "Diverse data sources",
                "Mobile support",
                "ML integration",
                "Cost efficient"
            ],
            "cons": [
                "Customization limitations",
                "Advanced analytics limitations",
                "Learning curve",
                "Regional limitations"
            ]
        }
    },
    "CloudShell": {
        "name": "AWS CloudShell",
        "description": "Browser-based shell environment. Pre-configured with AWS CLI and SDKs for direct AWS resource management from browser.",
        "usability": {
            "reviews": [
                "No local environment setup needed, AWS CLI ready to use immediately",
                "Convenient to operate AWS from just a browser",
                "Perfect environment for temporary tasks"
            ],
            "pros": [
                "No setup required",
                "Browser-based",
                "Pre-configured",
                "Free",
                "Secure"
            ],
            "cons": [
                "Session limits",
                "Storage limits",
                "Regional limitations",
                "Customization limits"
            ]
        }
    },
    "Cloud9": {
        "name": "AWS Cloud9",
        "description": "Cloud-based integrated development environment (IDE). Enables code editing, running, and debugging from browser with team development support.",
        "usability": {
            "reviews": [
                "Surprised that full-scale development is possible from just a browser",
                "Code sharing with team became easier",
                "AWS SDK integration makes AWS app development efficient"
            ],
            "pros": [
                "Browser-based",
                "Team development",
                "AWS integration",
                "Real-time sharing",
                "No environment setup"
            ],
            "cons": [
                "Internet dependency",
                "Performance limitations",
                "Customization limits",
                "Cost"
            ]
        }
    },
    "AssumeRole": {
        "name": "AssumeRole",
        "description": "API operation for temporarily assuming IAM roles. Enables secure cross-account access and permission delegation.",
        "usability": {
            "reviews": [
                "Cross-account access can be achieved securely",
                "Temporary permission granting improved security",
                "Permission management in automation scripts became more efficient"
            ],
            "pros": [
                "Security improvement",
                "Temporary permissions",
                "Cross-account access",
                "Audit trail",
                "Automation support"
            ],
            "cons": [
                "Configuration complexity",
                "Understanding difficulty",
                "Token management",
                "Time limitations"
            ]
        }
    },
    "リザーブドインスタンス": {
        "name": "Reserved Instances",
        "description": "Pricing option that provides up to 75% discount compared to On-Demand pricing by committing to use EC2 instances for 1 or 3 years.",
        "usability": {
            "reviews": [
                "If you plan to use the same instance type long-term, the cost savings are tremendous",
                "Can't change the reserved instance type, so upfront planning is crucial",
                "Marketplace trading feature is convenient"
            ],
            "pros": [
                "Significant cost savings (up to 75% off)",
                "Predictable pricing",
                "Capacity reservation",
                "Marketplace trading available"
            ],
            "cons": [
                "Long-term commitment required",
                "Limited flexibility",
                "No early termination",
                "Instance type change restrictions"
            ]
        }
    },
    "IAM Access Analyzer": {
        "name": "AWS IAM Access Analyzer",
        "description": "Security service that analyzes IAM policies and resource access to detect unintended external access.",
        "usability": {
            "reviews": [
                "Discovered unintended public access and improved security",
                "Helpful in visualizing IAM policy complexity",
                "Continuous monitoring provides peace of mind for resource operations"
            ],
            "pros": [
                "Security improvement",
                "Continuous monitoring",
                "Policy analysis",
                "External access detection",
                "Compliance support"
            ],
            "cons": [
                "Alert fatigue",
                "Configuration complexity",
                "False positive potential",
                "Learning curve"
            ]
        }
    },
    "Kinesis Video Streams": {
        "name": "Amazon Kinesis Video Streams",
        "description": "Service for real-time ingestion, storage, and processing of video streaming data. Integrates with machine learning and analytics.",
        "usability": {
            "reviews": [
                "Easy to stream video data from IoT devices",
                "ML integration enabled real-time analysis",
                "Security camera data management became more efficient"
            ],
            "pros": [
                "Real-time processing",
                "ML integration",
                "Scalable",
                "Secure",
                "Durable"
            ],
            "cons": [
                "Cost",
                "Complex configuration",
                "Bandwidth requirements",
                "Regional limitations"
            ]
        }
    },
    "Kinesis Data Streams": {
        "name": "Amazon Kinesis Data Streams",
        "description": "Real-time data streaming service. Collects and processes large amounts of data records in real-time, consumable by multiple applications simultaneously.",
        "usability": {
            "reviews": [
                "Satisfied with real-time data processing capabilities",
                "Convenient to process same data with multiple applications",
                "Easy operations with automatic scaling"
            ],
            "pros": [
                "Real-time processing",
                "High throughput",
                "Multiple consumer support",
                "Durable",
                "Scalable"
            ],
            "cons": [
                "Shard management",
                "Cost",
                "Complex configuration",
                "Data retention limits"
            ]
        }
    },
    "Kinesis Data Firehose": {
        "name": "Amazon Kinesis Data Firehose",
        "description": "Fully managed service that automatically delivers streaming data to AWS data stores. Automatically performs data transformation and compression.",
        "usability": {
            "reviews": [
                "Streaming data delivery became fully automated",
                "Data transformation feature eliminated need for preprocessing",
                "Easy setup for delivery to S3 and Redshift"
            ],
            "pros": [
                "Fully managed",
                "Automatic delivery",
                "Data transformation",
                "Compression capability",
                "Multiple destination support"
            ],
            "cons": [
                "Real-time limitations",
                "Destination restrictions",
                "Customization limits",
                "Cost"
            ]
        }
    },
    "Elasticsearch": {
        "name": "Amazon Elasticsearch Service",
        "description": "Managed service for easy deployment, operation, and scaling of Elasticsearch clusters. Now migrated to OpenSearch Service.",
        "usability": {
            "reviews": [
                "Log analysis and full-text search execute at high speed",
                "Kibana visualization is intuitive and easy to understand",
                "Considering migration to OpenSearch Service"
            ],
            "pros": [
                "Fast search",
                "Scalable",
                "Kibana integration",
                "Managed",
                "Real-time analysis"
            ],
            "cons": [
                "Service deprecation planned",
                "Complex configuration",
                "Cost",
                "Version limitations"
            ]
        }
    },
    "Kinesis Data Analytics": {
        "name": "Amazon Kinesis Data Analytics",
        "description": "Service for real-time analysis of streaming data. Performs streaming analytics using SQL queries or Apache Flink.",
        "usability": {
            "reviews": [
                "Convenient to analyze streaming data with SQL",
                "Real-time anomaly detection was achieved",
                "Advanced analysis possible with Apache Flink integration"
            ],
            "pros": [
                "Real-time analysis",
                "SQL support",
                "Apache Flink integration",
                "Scalable",
                "Managed"
            ],
            "cons": [
                "Learning curve",
                "Complex configuration",
                "Cost",
                "Limitations"
            ]
        }
    },
    "AWS Glue DataBrew": {
        "name": "AWS Glue DataBrew",
        "description": "Visual data preparation service for data preparation and transformation without writing code. Improves data quality and simplifies ETL processes.",
        "usability": {
            "reviews": [
                "Helpful to perform data cleansing without writing code",
                "Visual interface is intuitive and easy to use",
                "Easy to discover and fix data quality issues"
            ],
            "pros": [
                "No-code",
                "Visual interface",
                "Data quality improvement",
                "Easy operation",
                "Rich transformation features"
            ],
            "cons": [
                "Cost",
                "Complex processing limitations",
                "Learning curve",
                "Performance limitations"
            ]
        }
    },
    "AWS Glue Sensitive Data Detection": {
        "name": "AWS Glue Sensitive Data Detection",
        "description": "Service that automatically detects and classifies sensitive data in data lakes. Identifies PII (Personally Identifiable Information) and other confidential information.",
        "usability": {
            "reviews": [
                "Peace of mind with automatic discovery of personal information in data lake",
                "Compliance requirement handling became more efficient",
                "Clear location of sensitive data made management easier"
            ],
            "pros": [
                "Automatic detection",
                "Sensitive data classification",
                "Compliance support",
                "Data governance",
                "Integrated management"
            ],
            "cons": [
                "Cost",
                "False positive potential",
                "Configuration complexity",
                "Supported data format limitations"
            ]
        }
    },
    "Elastic IP": {
        "name": "Elastic IP Address",
        "description": "Dynamically allocatable static IPv4 address. Associates with EC2 instances or NAT gateways to provide fixed IP addresses.",
        "usability": {
            "reviews": [
                "Convenient that IP address doesn't change when restarting instances",
                "No need to change DNS settings, maintaining service continuity",
                "Release when not in use to reduce costs"
            ],
            "pros": [
                "Fixed IP address",
                "Dynamic allocation",
                "Service continuity",
                "No DNS configuration needed",
                "Flexible management"
            ],
            "cons": [
                "Charges when unused",
                "IPv4 address exhaustion",
                "Regional limitations",
                "Quantity limits"
            ]
        }
    },
    "マネージドプレフィックスリスト": {
        "name": "Managed Prefix Lists",
        "description": "Service for grouping and managing IP address ranges. Reusable IP address collections that can be referenced in security groups and route tables.",
        "usability": {
            "reviews": [
                "Convenient to centralize IP address range management",
                "Security group configuration became more concise",
                "Automatic response to AWS service IP address changes"
            ],
            "pros": [
                "Centralized management",
                "Reusable",
                "Automatic updates",
                "Configuration simplification",
                "AWS service integration"
            ],
            "cons": [
                "Understanding complexity",
                "Limitations",
                "Regional dependency",
                "Configuration error risk"
            ]
        }
    },
    "セキュリティグループ": {
        "name": "Security Groups",
        "description": "Virtual firewall operating at EC2 instance level. Controls inbound and outbound traffic with stateful connection tracking.",
        "usability": {
            "reviews": [
                "Intuitive configuration makes it great as a network security foundation",
                "Stateful nature automatically allows return traffic, which is very convenient",
                "Peace of mind with fine-grained control per instance"
            ],
            "pros": [
                "Stateful connection tracking",
                "Instance-level control",
                "Real-time application",
                "Secure default settings",
                "Flexible rule configuration"
            ],
            "cons": [
                "Cannot set deny rules",
                "No logging capability",
                "Rule number limitations",
                "Management complexity with complex configurations"
            ]
        }
    },
    "バケット": {
        "name": "S3 Bucket",
        "description": "Container for storing objects in Amazon S3. Has globally unique names and supports various storage classes and access controls.",
        "usability": {
            "reviews": [
                "File storage and management is extremely simple",
                "Fine-grained access control settings provide security",
                "Convenient for static website hosting as well"
            ],
            "pros": [
                "Unlimited capacity",
                "High durability",
                "Flexible access control",
                "Various storage classes",
                "Static hosting support"
            ],
            "cons": [
                "Global namespace",
                "No deletion recovery",
                "Complex pricing structure",
                "Configuration error risk"
            ]
        }
    },
    "S3 標準IA": {
        "name": "S3 Standard-Infrequent Access",
        "description": "S3 storage class for infrequently accessed data. Lower cost than S3 Standard but charges for data retrieval. Replicated across multiple AZs.",
        "usability": {
            "reviews": [
                "For monthly access, costs can be significantly reduced",
                "Data availability is same as standard, providing peace of mind",
                "Retrieval charges exist, so assessing access frequency is important"
            ],
            "pros": [
                "Low cost",
                "High availability",
                "High durability",
                "Immediate retrieval",
                "Multi-AZ replication"
            ],
            "cons": [
                "Retrieval charges",
                "Minimum storage duration",
                "Minimum object size",
                "Access frequency dependent"
            ]
        }
    },
    "S3 Intelligent-Tiering": {
        "name": "S3 Intelligent-Tiering",
        "description": "S3 feature that automatically optimizes storage classes based on access patterns. Uses machine learning to automatically improve cost efficiency.",
        "usability": {
            "reviews": [
                "Perfect for data with unpredictable access patterns",
                "Automatic optimization eliminated the need for manual cost reduction efforts",
                "Monitoring fees apply, but total savings are achieved"
            ],
            "pros": [
                "Automatic optimization",
                "Cost efficiency",
                "No management required",
                "Access pattern learning",
                "No retrieval charges"
            ],
            "cons": [
                "Monitoring fees",
                "Minimum object size",
                "Complex pricing structure",
                "Not suitable for small files"
            ]
        }
    },
    "S3 1ゾーンIA": {
        "name": "S3 One Zone-Infrequent Access",
        "description": "S3 storage class that stores data in a single Availability Zone. Low-cost storage for infrequently accessed data. 20% cheaper than Standard-IA.",
        "usability": {
            "reviews": [
                "Perfect for storing reproducible data",
                "Even cheaper than Standard-IA, which is helpful",
                "Single AZ means slightly concerning availability, but no issues"
            ],
            "pros": [
                "Lowest cost",
                "Immediate retrieval",
                "20% cheaper than Standard-IA",
                "High durability"
            ],
            "cons": [
                "Single AZ",
                "Reduced availability",
                "Retrieval charges",
                "Minimum storage duration"
            ]
        }
    },
    "S3 Glacier Instant Retrieval": {
        "name": "S3 Glacier Instant Retrieval",
        "description": "Archive storage class that allows instant retrieval of long-term storage data. Optimal for data accessed a few times per year.",
        "usability": {
            "reviews": [
                "Convenient to retrieve archive data instantly",
                "Reduces costs for long-term storage while allowing immediate access when needed",
                "Feel it's optimal for backup data storage"
            ],
            "pros": [
                "Instant retrieval",
                "Low cost",
                "Long-term storage oriented",
                "High durability",
                "Millisecond response"
            ],
            "cons": [
                "High retrieval charges",
                "90-day minimum storage duration",
                "Minimum object size",
                "Not suitable for frequent access"
            ]
        }
    },
    "S3 Glacier Flexible Retrieval": {
        "name": "S3 Glacier Flexible Retrieval",
        "description": "Low-cost storage class for long-term archiving. Takes minutes to hours for retrieval but enables very cheap data storage.",
        "usability": {
            "reviews": [
                "Long-term backup storage costs dropped dramatically",
                "Takes time to retrieve, but perfect for non-urgent data",
                "Using it for disaster recovery data storage"
            ],
            "pros": [
                "Very low cost",
                "Long-term storage oriented",
                "High durability",
                "Flexible retrieval options",
                "Large capacity support"
            ],
            "cons": [
                "Retrieval time (minutes to hours)",
                "Retrieval charges",
                "90-day minimum storage duration",
                "No immediate access"
            ]
        }
    },
    "静的Webサイトのホスティング": {
        "name": "S3 Static Website Hosting",
        "description": "Feature for hosting static websites using S3 buckets. Can directly serve HTML, CSS, and JavaScript files.",
        "usability": {
            "reviews": [
                "Convenient to publish static sites with simple configuration",
                "No server management required and costs are kept low",
                "Achieving high-speed delivery combined with CloudFront"
            ],
            "pros": [
                "Serverless",
                "Low cost",
                "High availability",
                "Scalable",
                "Simple configuration"
            ],
            "cons": [
                "Static content only",
                "No server-side processing",
                "HTTPS configuration complexity",
                "Custom domain setup"
            ]
        }
    },
    "Lake Formation": {
        "name": "AWS Lake Formation",
        "description": "Service that simplifies data lake construction and management. Provides integrated management of data ingestion, transformation, security, and governance.",
        "usability": {
            "reviews": [
                "Data lake construction became significantly easier",
                "Data security and governance can be managed centrally",
                "Automated ingestion from multiple data sources"
            ],
            "pros": [
                "Data lake construction simplification",
                "Integrated security",
                "Data governance",
                "Automated data ingestion",
                "Permission management"
            ],
            "cons": [
                "Learning curve",
                "Configuration complexity",
                "Cost",
                "Vendor lock-in"
            ]
        }
    },
    "QuickSight": {
        "name": "Amazon QuickSight",
        "description": "Cloud-native business intelligence (BI) service. Enables easy data visualization and dashboard creation.",
        "usability": {
            "reviews": [
                "Intuitive interface for creating dashboards",
                "Convenient to connect to various data sources",
                "Mobile-friendly and accessible on the go"
            ],
            "pros": [
                "Intuitive UI",
                "Diverse data sources",
                "Mobile support",
                "ML integration",
                "Cost efficient"
            ],
            "cons": [
                "Customization limitations",
                "Advanced analytics limitations",
                "Learning curve",
                "Regional limitations"
            ]
        }
    },
    "OpenSearch Service": {
        "name": "Amazon OpenSearch Service",
        "description": "Managed service for open-source search and analytics engine, successor to Elasticsearch. Provides log analysis, full-text search, and visualization.",
        "usability": {
            "reviews": [
                "Migration from Elasticsearch was smooth",
                "Log analysis performance improved and search speed is fast",
                "Dashboard features made visualization easier"
            ],
            "pros": [
                "Fast search",
                "Scalable",
                "Dashboard integration",
                "Managed",
                "Open source"
            ],
            "cons": [
                "Complex configuration",
                "Cost",
                "Learning curve",
                "Resource management"
            ]
        }
    },
    "AppSync": {
        "name": "AWS AppSync",
        "description": "Fully managed service for building and managing GraphQL APIs. Provides real-time data synchronization and offline capabilities.",
        "usability": {
            "reviews": [
                "GraphQL API construction became very simple",
                "Real-time sync features improved user experience",
                "Helpful that offline support is automatically implemented"
            ],
            "pros": [
                "GraphQL support",
                "Real-time sync",
                "Offline capabilities",
                "Managed",
                "Scalable"
            ],
            "cons": [
                "GraphQL learning curve",
                "Complex configuration",
                "Cost",
                "Vendor lock-in"
            ]
        }
    },
    "AppFlow": {
        "name": "Amazon AppFlow",
        "description": "Fully managed data integration service for secure data transfer between SaaS applications and AWS services. Integrates with Salesforce, Slack, and others.",
        "usability": {
            "reviews": [
                "Easy integration between SaaS apps and AWS was achieved",
                "Data transfer automation improved business efficiency",
                "Can use with confidence from security perspective"
            ],
            "pros": [
                "SaaS integration",
                "Data transfer automation",
                "Secure",
                "No-code",
                "Scheduled execution"
            ],
            "cons": [
                "Limited SaaS support",
                "Cost",
                "Customization limitations",
                "Complex transformation limitations"
            ]
        }
    },
    "Cost and Usage Report": {
        "name": "AWS Cost and Usage Report",
        "description": "Service providing detailed reports on AWS usage and costs. Enables hourly detailed billing information retrieval.",
        "usability": {
            "reviews": [
                "Detailed cost analysis became possible",
                "Hourly cost understanding advanced optimization",
                "Visualizing by integrating with BI tools"
            ],
            "pros": [
                "Detailed cost information",
                "Hourly data",
                "Customizable",
                "Automatic delivery",
                "BI integration"
            ],
            "cons": [
                "Large data volume",
                "Analysis complexity",
                "Latency",
                "Storage costs"
            ]
        }
    },
    "オンデマンドインスタンス": {
        "name": "On-Demand Instances",
        "description": "Standard EC2 pricing model where you pay only for what you use. Can start and stop as needed without long-term contracts.",
        "usability": {
            "reviews": [
                "High flexibility to use only when needed",
                "Optimal pricing structure for development and test environments",
                "Peace of mind to handle unpredictable loads"
            ],
            "pros": [
                "Flexibility",
                "No long-term contracts",
                "Immediate startup",
                "No prediction required",
                "Simple pricing"
            ],
            "cons": [
                "High cost",
                "Not suitable for long-term use",
                "No discounts",
                "Potential capacity limitations"
            ]
        }
    },
    "スポットインスタンス": {
        "name": "Spot Instances",
        "description": "EC2 instances available at up to 90% discount from On-Demand prices by using AWS spare capacity. Pricing fluctuates based on supply and demand.",
        "usability": {
            "reviews": [
                "Costs drop dramatically when used for batch processing and test environments",
                "Perfect for stateless workloads since interruption is possible",
                "Using while monitoring price fluctuations"
            ],
            "pros": [
                "Massive cost savings (up to 90% off)",
                "Perfect for large-scale parallel processing",
                "Flexible pricing",
                "High cost performance"
            ],
            "cons": [
                "Instance interruption risk",
                "Price volatility",
                "Not suitable for stateful applications",
                "Availability uncertainty"
            ]
        }
    },
    "DocumentDB": {
        "name": "Amazon DocumentDB",
        "description": "MongoDB-compatible fully managed document database service. Provides high availability and scalability.",
        "usability": {
            "reviews": [
                "Helpful that MongoDB applications work as-is",
                "No management tasks required, can focus on development",
                "Performance is also good and satisfactory"
            ],
            "pros": [
                "MongoDB compatible",
                "Fully managed",
                "High availability",
                "Scalable",
                "Automated backups"
            ],
            "cons": [
                "Not fully MongoDB compatible",
                "Cost",
                "Feature limitations",
                "Vendor lock-in"
            ]
        }
    },
    "Amplify": {
        "name": "AWS Amplify",
        "description": "Platform that simplifies full-stack web application and mobile app development and deployment.",
        "usability": {
            "reviews": [
                "Can develop consistently from frontend to backend",
                "CI/CD automatically configured, making deployment easier",
                "Authentication feature implementation was very simple"
            ],
            "pros": [
                "Full-stack development",
                "CI/CD integration",
                "Authentication features",
                "Hosting",
                "Easy deployment"
            ],
            "cons": [
                "Vendor lock-in",
                "Customization limitations",
                "Learning curve",
                "Cost"
            ]
        }
    },
    "Device Farm": {
        "name": "AWS Device Farm",
        "description": "Cloud service for testing mobile applications on real devices. Executes tests on diverse iOS and Android devices.",
        "usability": {
            "reviews": [
                "Testing on many real devices helps improve quality",
                "No need for device purchase and management overhead",
                "Detailed test result reports are easy to understand"
            ],
            "pros": [
                "Real device testing",
                "Diverse devices",
                "Automated testing",
                "Detailed reports",
                "No device management required"
            ],
            "cons": [
                "Cost",
                "Test time limitations",
                "Regional limitations",
                "Customization limitations"
            ]
        }
    },
    "Auto Scaling": {
        "name": "Amazon EC2 Auto Scaling",
        "description": "Service that automatically adjusts the number of EC2 instances based on demand. Performs scale-out and scale-in based on load.",
        "usability": {
            "reviews": [
                "Convenient that instances automatically increase and decrease based on load",
                "Achieving both cost optimization and availability",
                "Configuration is somewhat complex, but once set up, provides peace of mind"
            ],
            "pros": [
                "Automatic scaling",
                "Cost optimization",
                "High availability",
                "Load distribution",
                "Fault handling"
            ],
            "cons": [
                "Configuration complexity",
                "Scaling delays",
                "Difficult cost prediction",
                "Over-scaling risk"
            ]
        }
    },
    "Snowcone": {
        "name": "AWS Snowcone",
        "description": "Small edge computing and data transfer device. Has 8TB storage and can operate in harsh environments.",
        "usability": {
            "reviews": [
                "Small and portable, perfect for on-site data collection",
                "Operates stably even in poor network environments",
                "Data transfer time was significantly reduced"
            ],
            "pros": [
                "Small and lightweight",
                "Ruggedness",
                "Edge computing",
                "Offline operation",
                "Secure"
            ],
            "cons": [
                "Capacity limitations",
                "Cost",
                "Physical device management",
                "Return procedures"
            ]
        }
    },
    "Snowmobile": {
        "name": "AWS Snowmobile",
        "description": "Truck-type device for exabyte-scale data transfer. Physically transfers up to 100PB of data to AWS.",
        "usability": {
            "reviews": [
                "Large-scale data migration completed in realistic time",
                "Can migrate data at scales impossible with network transfer",
                "Peace of mind with strict security management"
            ],
            "pros": [
                "Ultra-large capacity",
                "High-speed transfer",
                "Secure",
                "Network bandwidth savings",
                "Expert support"
            ],
            "cons": [
                "Ultra-large scale only",
                "High cost",
                "Physical constraints",
                "Long-term projects"
            ]
        }
    },
    "Client VPN": {
        "name": "AWS Client VPN",
        "description": "Managed service providing secure VPN connections from client devices to AWS and on-premises resources.",
        "usability": {
            "reviews": [
                "AWS resource access for remote work became secure",
                "Client configuration is simple with low user burden",
                "Detailed connection logs are helpful for auditing"
            ],
            "pros": [
                "Remote access",
                "Secure connection",
                "Managed",
                "Scalable",
                "Detailed logging"
            ],
            "cons": [
                "Cost",
                "Configuration complexity",
                "Performance limitations",
                "Regional limitations"
            ]
        }
    },
    "Site-to-Site VPN": {
        "name": "AWS Site-to-Site VPN",
        "description": "VPN service for secure connection between on-premises networks and AWS VPC. Achieves encrypted communication through IPsec tunnels.",
        "usability": {
            "reviews": [
                "Secure integration between on-premises and cloud was achieved",
                "Configuration was complex, but stable once built",
                "Availability ensured with redundant configuration"
            ],
            "pros": [
                "Secure connection",
                "Hybrid configuration",
                "Redundancy support",
                "Encrypted communication",
                "Cost efficient"
            ],
            "cons": [
                "Configuration complexity",
                "Bandwidth limitations",
                "Latency",
                "Network knowledge required"
            ]
        }
    },
    "ACM(AWS Certificate Manager)": {
        "name": "AWS Certificate Manager",
        "description": "Service that automates SSL/TLS certificate acquisition, management, and deployment. Simplifies certificate management through AWS service integration.",
        "usability": {
            "reviews": [
                "SSL certificate management became fully automated",
                "No more worries about renewal oversight, security improved",
                "Integration with CloudFront and ELB was simple"
            ],
            "pros": [
                "Automatic renewal",
                "Free certificates",
                "AWS service integration",
                "Management simplification",
                "Security improvement"
            ],
            "cons": [
                "Limited use outside AWS",
                "Wildcard limitations",
                "Validation method limitations",
                "Regional limitations"
            ]
        }
    },
    "IAMポリシー": {
        "name": "IAM Policy",
        "description": "JSON document defining access permissions to AWS resources. Applied to users, groups, and roles to implement access control.",
        "usability": {
            "reviews": [
                "Fine-grained permission control improved security",
                "Complex in JSON format, but flexible configuration once familiar",
                "Practicing principle of least privilege"
            ],
            "pros": [
                "Fine-grained permission control",
                "Flexible configuration",
                "Least privilege principle",
                "Version management",
                "Conditional access"
            ],
            "cons": [
                "Complex syntax",
                "Learning curve",
                "Configuration error risk",
                "Debugging difficulties"
            ]
        }
    },
    "AWS CLI": {
        "name": "AWS Command Line Interface",
        "description": "Tool for operating AWS services from the command line. Optimal for scripting and automation, with access to all AWS services.",
        "usability": {
            "reviews": [
                "Efficient to automate AWS operations with scripts",
                "Faster operation than GUI if familiar with command line",
                "Convenient to manage multiple profiles with configuration files"
            ],
            "pros": [
                "Automation support",
                "All services support",
                "Scriptable",
                "Fast operation",
                "Profile management"
            ],
            "cons": [
                "Learning curve",
                "Command memorization",
                "Error message understanding",
                "Difference from GUI operations"
            ]
        }
    },
    "アクセスキー": {
        "name": "Access Key",
        "description": "Authentication credentials for programmatic access to AWS services. Consists of Access Key ID and Secret Access Key pair.",
        "usability": {
            "reviews": [
                "Essential for programmatic access to AWS",
                "Security management is important, requiring regular rotation",
                "IAM roles are safer, but necessary for external access"
            ],
            "pros": [
                "Programmatic access",
                "API authentication",
                "Automation support",
                "External system integration",
                "CLI/SDK support"
            ],
            "cons": [
                "Security risk",
                "Management complexity",
                "Rotation required",
                "Leakage risk"
            ]
        }
    },
    "ENI": {
        "name": "Elastic Network Interface",
        "description": "Virtual network interface within VPC. Attaches to EC2 instances to provide multiple network interfaces.",
        "usability": {
            "reviews": [
                "Convenient when multiple network interfaces are needed",
                "Smooth IP migration during failover",
                "Flexible with individual security group settings"
            ],
            "pros": [
                "Multiple NIC support",
                "IP migration capable",
                "Individual security settings",
                "Failover support",
                "Flexible network configuration"
            ],
            "cons": [
                "Configuration complexity",
                "Cost",
                "Performance impact",
                "Management overhead"
            ]
        }
    },
    "AMI": {
        "name": "Amazon Machine Image",
        "description": "Template for launching EC2 instances. Virtual machine snapshot containing OS, applications, and configurations.",
        "usability": {
            "reviews": [
                "Easy to replicate same environment by creating custom AMIs",
                "Marketplace AMIs allow immediate use of pre-configured environments",
                "Can also be used as backup, providing peace of mind"
            ],
            "pros": [
                "Environment replication",
                "Fast startup",
                "Pre-configured environment",
                "Backup functionality",
                "Marketplace availability"
            ],
            "cons": [
                "Storage costs",
                "Management overhead",
                "Security updates",
                "Size limitations"
            ]
        }
    },
    "AWS Global Accelerator": {
        "name": "AWS Global Accelerator",
        "description": "Global network optimization service. Improves application performance by leveraging AWS global network infrastructure.",
        "usability": {
            "reviews": [
                "Global user access speed improved significantly",
                "Stable by leveraging AWS backbone network",
                "Simple configuration, applicable to existing applications"
            ],
            "pros": [
                "Performance improvement",
                "Global optimization",
                "AWS backbone utilization",
                "Simple configuration",
                "High availability"
            ],
            "cons": [
                "Cost",
                "Regional limitations",
                "Configuration complexity",
                "Troubleshooting"
            ]
        }
    },
    "Amazon Elastic Transcoder": {
        "name": "Amazon Elastic Transcoder",
        "description": "Cloud-based media conversion service. Converts video and audio files optimized for various devices and resolutions. Scalable processing with S3 integration.",
        "usability": {
            "reviews": [
                "Video conversion automation made operations easier",
                "Supports various formats, making device optimization simple",
                "Smooth S3 integration provides confidence for large-scale processing"
            ],
            "pros": [
                "Automatic conversion",
                "Diverse formats",
                "Device optimization",
                "S3 integration",
                "Scalable"
            ],
            "cons": [
                "Processing time",
                "Cost",
                "Customization limitations",
                "Regional limitations"
            ]
        }
    },
    "リードレプリカ": {
        "name": "Read Replica",
        "description": "Read-only copy of database. Distributes read load and improves performance. Asynchronously replicates data from master database.",
        "usability": {
            "reviews": [
                "Read load distribution improved database performance",
                "Can isolate report processing, reducing impact on production environment",
                "Also using as disaster recovery preparation"
            ],
            "pros": [
                "Read load distribution",
                "Performance improvement",
                "Processing isolation",
                "Disaster recovery preparation",
                "Scalability"
            ],
            "cons": [
                "Data lag",
                "Increased cost",
                "Management complexity",
                "No write capability"
            ]
        }
    },
    "マルチAZ": {
        "name": "Multi-AZ Deployment",
        "description": "High availability configuration deploying resources across multiple Availability Zones. Provides automatic failover during failures.",
        "usability": {
            "reviews": [
                "Automatic failover during failures ensures service continuity",
                "Simple configuration makes high availability easy to achieve",
                "Minimal performance impact provides peace of mind"
            ],
            "pros": [
                "High availability",
                "Automatic failover",
                "Service continuity",
                "Simple configuration",
                "Fault handling"
            ],
            "cons": [
                "Increased cost",
                "Increased latency",
                "Complex configuration",
                "Regional limitations"
            ]
        }
    },
    "インスタンスストア": {
        "name": "Instance Store",
        "description": "Temporary storage physically attached to EC2 instances. Provides high IOPS but data is lost when instance stops.",
        "usability": {
            "reviews": [
                "Very high IOPS achieved, improving performance",
                "Perfect for temporary data processing, but not suitable for data requiring persistence",
                "Good that no additional charges as cost is included"
            ],
            "pros": [
                "High-speed IOPS",
                "Low latency",
                "No additional charges",
                "High performance",
                "Optimal for temporary processing"
            ],
            "cons": [
                "No data persistence",
                "Instance dependent",
                "No backup capability",
                "Data loss during failures"
            ]
        }
    },
    "AWS Fargate": {
        "name": "AWS Fargate",
        "description": "Serverless container execution service. Runs containers without server management, integrates with ECS and EKS.",
        "usability": {
            "reviews": [
                "No server management required, making container operations much easier",
                "Automatic scaling reduces operational burden",
                "Pay-as-you-go pricing means paying only for what you use"
            ],
            "pros": [
                "Serverless",
                "No management required",
                "Auto scaling",
                "Pay-as-you-go",
                "ECS/EKS integration"
            ],
            "cons": [
                "Higher cost",
                "Customization limitations",
                "Cold start",
                "Network limitations"
            ]
        }
    },
    "AWS Trusted Advisor": {
        "name": "AWS Trusted Advisor",
        "description": "Optimization recommendation service. Analyzes AWS environment from cost optimization, security, performance, and fault tolerance perspectives and provides improvement suggestions.",
        "usability": {
            "reviews": [
                "Cost reduction suggestions are specific, achieving significant actual savings",
                "Points out security issues, enabling countermeasures",
                "Regular checks for continuous environment optimization"
            ],
            "pros": [
                "Cost optimization",
                "Security improvement",
                "Performance enhancement",
                "Specific suggestions",
                "Continuous monitoring"
            ],
            "cons": [
                "Paid feature limitations",
                "Understanding suggestions",
                "Implementation effort",
                "Alert fatigue"
            ]
        }
    },
    "S3ストレージクラス": {
        "name": "S3 Storage Classes",
        "description": "Various storage options provided by S3. Can select optimal class based on access frequency and cost requirements.",
        "usability": {
            "reviews": [
                "Cost-efficient to choose optimal storage class based on usage",
                "Convenient automatic optimization with Intelligent-Tiering",
                "Easy management with automatic migration via lifecycle policies"
            ],
            "pros": [
                "Cost optimization",
                "Usage-based selection",
                "Automatic optimization",
                "Lifecycle management",
                "Flexible options"
            ],
            "cons": [
                "Complex pricing structure",
                "Selection difficulty",
                "Migration costs",
                "Understanding complexity"
            ]
        }
    },
    "Amazon Lightsail": {
        "name": "Amazon Lightsail",
        "description": "Simple cloud platform. Provides virtual private servers, storage, and databases with predictable pricing.",
        "usability": {
            "reviews": [
                "Clear pricing, perfect for small-scale projects",
                "Simple configuration allows immediate server setup",
                "Convenient with pre-configured applications like WordPress"
            ],
            "pros": [
                "Simple pricing",
                "Easy configuration",
                "Pre-configured apps",
                "Predictable costs",
                "Beginner-friendly"
            ],
            "cons": [
                "Feature limitations",
                "Scalability limitations",
                "Customization limitations",
                "No advanced features"
            ]
        }
    },
    "EC2リザーブドインスタンス": {
        "name": "EC2 Reserved Instances",
        "description": "EC2-specific pricing option that provides up to 75% discount compared to On-Demand pricing by committing to use EC2 instances for 1 or 3 years.",
        "usability": {
            "reviews": [
                "If you plan to use the same EC2 instances long-term, the cost savings are tremendous",
                "Can't change the reserved instance type, so upfront planning is crucial",
                "Marketplace trading feature is convenient"
            ],
            "pros": [
                "Significant cost savings (up to 75% off)",
                "Predictable pricing",
                "Capacity reservation",
                "Marketplace trading available",
                "EC2-specific optimization"
            ],
            "cons": [
                "Long-term commitment required",
                "Limited flexibility",
                "No early termination",
                "Instance type change restrictions"
            ]
        }
    },
    "RDSリザーブドインスタンス": {
        "name": "RDS Reserved Instances",
        "description": "RDS-specific pricing option that provides significant discounts compared to On-Demand pricing by committing to use RDS instances for 1 or 3 years.",
        "usability": {
            "reviews": [
                "Very high cost reduction effect for long-term database operations",
                "RDS-specific optimization makes it perfect for database workloads",
                "Stable pricing during reservation period makes budget management easier"
            ],
            "pros": [
                "Significant cost savings",
                "Database optimization",
                "Predictable pricing",
                "Long-term operation oriented",
                "Stable budget"
            ],
            "cons": [
                "Long-term commitment required",
                "Instance change restrictions",
                "No early termination",
                "Limited flexibility"
            ]
        }
    },
    "ElastiCacheリザーブドノード": {
        "name": "ElastiCache Reserved Nodes",
        "description": "Pricing option that provides significant discounts compared to On-Demand pricing by committing to use ElastiCache nodes for 1 or 3 years.",
        "usability": {
            "reviews": [
                "Cost efficiency improves significantly for long-term cache cluster operations",
                "Convenient support for both Redis and Memcached",
                "Reservation enables maintaining stable cache environment"
            ],
            "pros": [
                "Significant cost savings",
                "Cache optimization",
                "Redis & Memcached support",
                "Stable operation",
                "Predictable pricing"
            ],
            "cons": [
                "Long-term commitment required",
                "Node change restrictions",
                "No early termination",
                "Limited flexibility"
            ]
        }
    },
    "DynamoDBリザーブドキャパシティ": {
        "name": "DynamoDB Reserved Capacity",
        "description": "Pricing option that provides significant discounts compared to On-Demand pricing by committing to DynamoDB read/write capacity for 1 or 3 years.",
        "usability": {
            "reviews": [
                "For predictable workloads, can significantly reduce DynamoDB costs",
                "Capacity-based reservation allows adaptation to table configuration changes",
                "Long-term NoSQL database operation costs become stable"
            ],
            "pros": [
                "Significant cost savings",
                "Capacity-based reservation",
                "Table configuration flexibility",
                "NoSQL optimization",
                "Predictable pricing"
            ],
            "cons": [
                "Long-term commitment required",
                "Capacity prediction needed",
                "No early termination",
                "Workload fluctuation risk"
            ]
        }
    },
    "Redshiftリザーブドノード": {
        "name": "Redshift Reserved Nodes",
        "description": "Data warehouse-specific pricing option that provides significant discounts compared to On-Demand pricing by committing to use Redshift nodes for 1 or 3 years.",
        "usability": {
            "reviews": [
                "Very high cost reduction effect for long-term data warehouse operations",
                "Can stabilize infrastructure costs for large-scale data analysis",
                "Reservation guarantees continuity of analysis environment"
            ],
            "pros": [
                "Significant cost savings",
                "Data warehouse optimization",
                "Large-scale data analysis oriented",
                "Stable analysis environment",
                "Predictable pricing"
            ],
            "cons": [
                "Long-term commitment required",
                "Node change restrictions",
                "No early termination",
                "Large-scale specific"
            ]
        }
    },
    "Amazon Rekognition": {
        "name": "Amazon Rekognition",
        "description": "Image and video analysis service. Uses machine learning to perform face recognition, object detection, text extraction, and inappropriate content detection.",
        "usability": {
            "reviews": [
                "High accuracy in image recognition and easy integration into applications",
                "Built security system using face recognition features",
                "Easy-to-use API, usable without machine learning knowledge"
            ],
            "pros": [
                "High accuracy recognition",
                "Simple API",
                "No ML knowledge required",
                "Diverse recognition features",
                "Scalable"
            ],
            "cons": [
                "Privacy concerns",
                "Cost",
                "Accuracy limitations",
                "Regional limitations"
            ]
        }
    },
    "Amazon Polly": {
        "name": "Amazon Polly",
        "description": "Text-to-speech service. Converts text to natural-sounding speech, supporting multiple languages and voices. SSML support enables voice control.",
        "usability": {
            "reviews": [
                "Surprised by the naturalness of the voice. Using it for app voice guidance",
                "Multi-language support makes it perfect for global services",
                "SSML allows voice adjustment for expressive speech"
            ],
            "pros": [
                "Natural voice",
                "Multi-language support",
                "SSML support",
                "Voice control",
                "Easy integration"
            ],
            "cons": [
                "Cost",
                "Limited voice personality",
                "Real-time constraints",
                "Regional limitations"
            ]
        }
    },
    "Amazon Lex": {
        "name": "Amazon Lex",
        "description": "Conversational AI service. Builds chatbots and voice assistants through natural language understanding of voice and text. Uses the same technology as Alexa.",
        "usability": {
            "reviews": [
                "Chatbot construction was surprisingly simple",
                "High accuracy in natural language understanding improved user experience",
                "Lambda integration enables complex processing"
            ],
            "pros": [
                "Natural language understanding",
                "Alexa technology utilization",
                "Chatbot construction",
                "Lambda integration",
                "Voice & text support"
            ],
            "cons": [
                "Learning curve",
                "Language limitations",
                "Complex dialogue limitations",
                "Regional limitations"
            ]
        }
    },
    "ACM": {
        "name": "AWS Certificate Manager",
        "description": "Service that automates SSL/TLS certificate acquisition, management, and deployment. Simplifies certificate management through AWS service integration.",
        "usability": {
            "reviews": [
                "SSL certificate management became fully automated",
                "No more worries about renewal oversight, security improved",
                "Integration with CloudFront and ELB was simple"
            ],
            "pros": [
                "Automatic renewal",
                "Free certificates",
                "AWS service integration",
                "Management simplification",
                "Security improvement"
            ],
            "cons": [
                "Limited use outside AWS",
                "Wildcard limitations",
                "Validation method limitations",
                "Regional limitations"
            ]
        }
    },
    "ブルー/グリーンデプロイ": {
        "name": "Blue/Green Deployment",
        "description": "Deployment technique using two identical environments (blue and green) and switching traffic between them to deploy applications with zero downtime.",
        "usability": {
            "reviews": [
                "Can deploy without downtime, minimizing impact on users",
                "Instant rollback capability provides peace of mind when issues occur",
                "Testing in production-equivalent environment improved quality"
            ],
            "pros": [
                "Zero downtime",
                "Instant rollback",
                "Production-equivalent testing",
                "Risk reduction",
                "Quality improvement"
            ],
            "cons": [
                "Double cost",
                "Complex resource management",
                "Database synchronization challenges",
                "Configuration complexity"
            ]
        }
    },
    "CloudWatch Events": {
        "name": "Amazon CloudWatch Events",
        "description": "Service that monitors AWS resource changes and executes event-driven processing. Now integrated into Amazon EventBridge.",
        "usability": {
            "reviews": [
                "Can automatically detect AWS resource changes and execute processing",
                "Convenient to easily configure scheduled execution",
                "Migrated to EventBridge, but basic functionality remains the same"
            ],
            "pros": [
                "Event-driven processing",
                "Automatic detection",
                "Scheduled execution",
                "AWS integration",
                "Real-time processing"
            ],
            "cons": [
                "Migrated to EventBridge",
                "Configuration complexity",
                "Debugging difficulties",
                "Event delays"
            ]
        }
    },
    "AWS DMS": {
        "name": "AWS Database Migration Service",
        "description": "Service that enables data migration between different databases with minimal downtime. Supports migration between homogeneous and heterogeneous databases.",
        "usability": {
            "reviews": [
                "Database migration from on-premises to cloud was smooth",
                "Helpful that it supports migration between different database engines",
                "Continuous replication minimized downtime"
            ],
            "pros": [
                "Minimal downtime",
                "Heterogeneous DB migration",
                "Continuous replication",
                "Migration support",
                "Data transformation"
            ],
            "cons": [
                "Configuration complexity",
                "Performance impact",
                "Data type limitations",
                "Learning curve"
            ]
        }
    },
    "可視性タイムアウト": {
        "name": "Visibility Timeout",
        "description": "Time period during which SQS messages become invisible to other consumers. Mechanism to prevent duplicate processing during message handling.",
        "usability": {
            "reviews": [
                "Prevents duplicate message processing, maintaining system consistency",
                "Need to adjust timeout value according to processing time",
                "Proper configuration enables efficient message processing"
            ],
            "pros": [
                "Duplicate processing prevention",
                "System consistency",
                "Efficient processing",
                "Adjustable",
                "Automatic management"
            ],
            "cons": [
                "Configuration difficulty",
                "Processing time dependency",
                "Dead letter handling",
                "Timeout management"
            ]
        }
    },
    "タイムアウト": {
        "name": "Timeout",
        "description": "Error that occurs when processing or requests don't complete within specified time. Important configurable parameter across AWS services.",
        "usability": {
            "reviews": [
                "Proper timeout configuration improves system stability",
                "Too long causes poor response, too short interrupts processing",
                "Important to find optimal values for each service"
            ],
            "pros": [
                "System stability",
                "Resource protection",
                "Response control",
                "Fault handling",
                "Adjustable"
            ],
            "cons": [
                "Configuration difficulty",
                "Processing interruption risk",
                "Performance impact",
                "Adjustment overhead"
            ]
        }
    },
    "Amazon ML": {
        "name": "Amazon Machine Learning",
        "description": "Service for easily building machine learning models and making predictions. New creation stopped, migration to SageMaker recommended.",
        "usability": {
            "reviews": [
                "Good service for machine learning introduction, but no longer available",
                "SageMaker is more feature-rich, currently using that instead",
                "Was easy to use for simple prediction models"
            ],
            "pros": [
                "Simple operation",
                "Beginner-friendly",
                "Prediction models",
                "GUI operation",
                "Automation"
            ],
            "cons": [
                "Service discontinued",
                "Feature limitations",
                "SageMaker migration required",
                "No new usage"
            ]
        }
    },
    "Amazon WorkLink": {
        "name": "Amazon WorkLink",
        "description": "Service for secure access to corporate internal websites and applications from mobile devices. Service now discontinued.",
        "usability": {
            "reviews": [
                "Could securely access corporate resources from mobile",
                "Convenient VPN-free access, but service has ended",
                "Migration to alternative services became necessary"
            ],
            "pros": [
                "Secure access",
                "No VPN required",
                "Mobile optimized",
                "Corporate resource connection",
                "Simple configuration"
            ],
            "cons": [
                "Service discontinued",
                "Migration required",
                "No new usage",
                "Alternative consideration needed"
            ]
        }
    },
    "WorkMail": {
        "name": "Amazon WorkMail",
        "description": "Secure business email and calendar service. Compatible with Microsoft Outlook, providing enterprise email solutions.",
        "usability": {
            "reviews": [
                "High Outlook compatibility made migration smooth",
                "Rich security features provide confidence for enterprise use",
                "Convenient with integrated calendar functionality"
            ],
            "pros": [
                "Outlook compatible",
                "Secure",
                "Calendar integration",
                "Enterprise-oriented",
                "Management features"
            ],
            "cons": [
                "Cost",
                "Feature limitations",
                "Regional limitations",
                "Customization limitations"
            ]
        }
    },
    "IAMユーザー": {
        "name": "IAM User",
        "description": "Individual user account created within AWS account. Has unique credentials and access permissions controlled by IAM policies.",
        "usability": {
            "reviews": [
                "Fine-grained access permission settings per individual improved security",
                "Individual management of access keys and passwords clarifies responsibility",
                "Multi-factor authentication can be configured for enhanced security"
            ],
            "pros": [
                "Individual permission management",
                "Unique credentials",
                "Fine-grained access control",
                "MFA support",
                "Audit trail"
            ],
            "cons": [
                "Management complexity",
                "User number limitations",
                "Permission configuration difficulty",
                "Long-term credential risks"
            ]
        }
    },
    "IAMロール": {
        "name": "IAM Role",
        "description": "AWS permission set that can be temporarily assumed. Used to grant permissions to AWS services like EC2 instances or Lambda functions.",
        "usability": {
            "reviews": [
                "Can grant permissions directly to EC2 instances, eliminating access key management",
                "Temporary credentials significantly reduce security risks",
                "Cross-account access can be achieved safely"
            ],
            "pros": [
                "Temporary credentials",
                "Security improvement",
                "No access keys needed",
                "Cross-account support",
                "Automatic rotation"
            ],
            "cons": [
                "Concept understanding difficulty",
                "Configuration complexity",
                "Debugging challenges",
                "Permission inheritance complexity"
            ]
        }
    },
    "ターゲットグループ": {
        "name": "Target Group",
        "description": "Group of destinations for traffic routing by Application Load Balancer or Network Load Balancer. Can register EC2 instances, IPs, and Lambda functions.",
        "usability": {
            "reviews": [
                "Load balancer configuration is clear and traffic distribution is simple",
                "Health check feature automatically excludes abnormal instances",
                "Flexible with support for multiple target types"
            ],
            "pros": [
                "Flexible routing",
                "Health checks",
                "Multiple target types",
                "Automatic exclusion",
                "Load distribution"
            ],
            "cons": [
                "Configuration complexity",
                "Health check tuning",
                "Target management",
                "Performance monitoring"
            ]
        }
    },
    "プライベートサブネット": {
        "name": "Private Subnet",
        "description": "Subnet without direct route to internet gateway. Cannot be directly accessed from internet, providing high security.",
        "usability": {
            "reviews": [
                "Perfect for resources like database servers that shouldn't be accessed externally",
                "Can access internet via NAT gateway, enabling updates",
                "High security, effective for protecting internal systems"
            ],
            "pros": [
                "High security",
                "External access blocked",
                "Internal communication possible",
                "NAT gateway access",
                "Data protection"
            ],
            "cons": [
                "No direct access",
                "Configuration complexity",
                "NAT gateway costs",
                "Troubleshooting difficulties"
            ]
        }
    },
    "パブリックサブネット": {
        "name": "Public Subnet",
        "description": "Subnet with direct route to internet gateway. Allows direct access from internet, used for web servers and similar resources.",
        "usability": {
            "reviews": [
                "Perfect for placing web servers and load balancers",
                "Direct internet access is convenient for public services",
                "Can assign Elastic IP for fixed IP access"
            ],
            "pros": [
                "Internet access",
                "Direct communication possible",
                "Public service oriented",
                "Elastic IP support",
                "Simple configuration"
            ],
            "cons": [
                "Security risks",
                "External attack target",
                "Proper protection needed",
                "Configuration error risks"
            ]
        }
    },
    "Kiro": {
        "name": "Kiro",
        "description": "AI-powered integrated development environment (IDE). Next-generation development tool that supports developer productivity improvement and streamlines code creation, debugging, and project management.",
        "usability": {
            "reviews": [
                "AI assistant significantly streamlines development work",
                "Intuitive interface with low learning cost",
                "Integrated project management features improved development flow"
            ],
            "pros": [
                "AI-assisted development",
                "Productivity improvement",
                "Intuitive UI",
                "Integrated environment",
                "Efficient workflow"
            ],
            "cons": [
                "New tool",
                "Learning period",
                "Dependency",
                "Customization limitations"
            ]
        }
    },
    "データプレーン": {
        "name": "Data Plane",
        "description": "System layer that performs actual data processing and traffic forwarding. Handles actual user data processing and requires high performance.",
        "usability": {
            "reviews": [
                "Important layer handling actual data processing, directly affecting performance",
                "Separated from control plane, less affected by management operations",
                "Scalability and latency are important design elements"
            ],
            "pros": [
                "High performance",
                "Actual data processing",
                "Separated from management operations",
                "Scalable",
                "Low latency"
            ],
            "cons": [
                "Design complexity",
                "Performance requirements",
                "Monitoring difficulties",
                "Debugging challenges"
            ]
        }
    },
    "コントロールプレーン": {
        "name": "Control Plane",
        "description": "Layer that manages and controls the system. Handles management functions like configuration changes, monitoring, and routing decisions, controlling the data plane.",
        "usability": {
            "reviews": [
                "Important layer responsible for overall system management and control",
                "Configuration changes and monitoring functions are consolidated, making operations easier",
                "Separated from data plane, enabling safe management operations"
            ],
            "pros": [
                "Centralized management",
                "Configuration control",
                "Monitoring functions",
                "Safe operations",
                "Operational efficiency"
            ],
            "cons": [
                "Single point of failure risk",
                "Management complexity",
                "Configuration error risk",
                "Availability requirements"
            ]
        }
    },
    "ECS Service Connect": {
        "name": "Amazon ECS Service Connect",
        "description": "Feature that simplifies communication between ECS services. Automates service discovery and load balancing, managing connections between microservices.",
        "usability": {
            "reviews": [
                "Communication setup between microservices was significantly simplified",
                "Service discovery automation reduces operational burden",
                "Relief from network configuration complexity"
            ],
            "pros": [
                "Communication simplification",
                "Automatic service discovery",
                "Load balancing",
                "Reduced operational burden",
                "Microservice optimization"
            ],
            "cons": [
                "ECS dependency",
                "Configuration learning curve",
                "Debugging complexity",
                "Limited information as new feature"
            ]
        }
    },
    "クロスアカウント": {
        "name": "Cross Account",
        "description": "Resource access and operations between different AWS accounts. Achieved safely using IAM roles and resource-based policies.",
        "usability": {
            "reviews": [
                "Can safely share resources between different departments within organization",
                "Can collaborate while maintaining security through account separation",
                "Permission delegation using IAM roles is effective"
            ],
            "pros": [
                "Inter-account collaboration",
                "Security maintenance",
                "Permission delegation",
                "Organizational support",
                "Resource sharing"
            ],
            "cons": [
                "Configuration complexity",
                "Permission management difficulties",
                "Debugging challenges",
                "Security risks"
            ]
        }
    },
    "VPC Lattice": {
        "name": "Amazon VPC Lattice",
        "description": "Service mesh that simplifies connections between applications. Uniformly manages service-to-service communication across VPCs, accounts, and regions.",
        "usability": {
            "reviews": [
                "Service-to-service communication possible without complex network configuration",
                "Connections between different VPCs and accounts became easier",
                "Took time to understand service mesh concepts"
            ],
            "pros": [
                "Service communication simplification",
                "Cross-VPC support",
                "Unified management",
                "No network configuration needed",
                "Security integration"
            ],
            "cons": [
                "Limited information as new service",
                "Learning curve",
                "Configuration complexity",
                "Cost"
            ]
        }
    },
    "ECS Service Discovery": {
        "name": "Amazon ECS Service Discovery",
        "description": "Automatic discovery feature for ECS services. Integrates with Route 53 to automate service registration and discovery, enabling dynamic service-to-service communication.",
        "usability": {
            "reviews": [
                "Dynamic service discovery automation made operations easier",
                "Smooth Route 53 integration makes DNS management simple",
                "Perfect feature for microservice architecture"
            ],
            "pros": [
                "Automatic service discovery",
                "Route 53 integration",
                "Dynamic communication",
                "Operation automation",
                "Microservice support"
            ],
            "cons": [
                "Route 53 dependency",
                "Configuration complexity",
                "DNS propagation delays",
                "Debugging difficulties"
            ]
        }
    },
    "Amazon CloudWatch Database Insights": {
        "name": "Amazon CloudWatch Database Insights",
        "description": "Database performance monitoring and analysis service. Supports database optimization through detailed query-level analysis.",
        "usability": {
            "reviews": [
                "Can analyze database bottlenecks in detail",
                "Query-level monitoring makes problem identification easier",
                "Helpful to get guidance for performance optimization"
            ],
            "pros": [
                "Detailed performance analysis",
                "Query-level monitoring",
                "Bottleneck identification",
                "Optimization support",
                "Real-time monitoring"
            ],
            "cons": [
                "Cost",
                "Configuration complexity",
                "Large data volume",
                "Analysis learning curve"
            ]
        }
    },
    "Amazon Neptune Database": {
        "name": "Amazon Neptune",
        "description": "Fully managed graph database service. Supports Property Graph and RDF, enabling advanced relationship analysis and knowledge graph construction.",
        "usability": {
            "reviews": [
                "Complex relationship data analysis can be performed efficiently",
                "High graph query performance, fast even with large-scale data",
                "Perfect for social network analysis and recommendation systems"
            ],
            "pros": [
                "Graph database",
                "High-performance queries",
                "Relationship analysis",
                "Fully managed",
                "Scalable"
            ],
            "cons": [
                "Specialized use case",
                "High learning curve",
                "High cost",
                "Query language acquisition"
            ]
        }
    },
    "EC2 Instance Connect": {
        "name": "Amazon EC2 Instance Connect",
        "description": "Service providing secure SSH connections to EC2 instances. Uses temporary SSH keys and controls access through IAM policies.",
        "usability": {
            "reviews": [
                "SSH connections became secure and simple",
                "Temporary keys reduce security risks",
                "Convenient to control access with IAM policies"
            ],
            "pros": [
                "Secure SSH connection",
                "Temporary keys",
                "IAM integration",
                "Easy connection",
                "Security improvement"
            ],
            "cons": [
                "Linux only",
                "Network requirements",
                "Configuration needed",
                "Regional limitations"
            ]
        }
    },
    "セッションマネージャー": {
        "name": "AWS Systems Manager Session Manager",
        "description": "Provides secure shell access to EC2 instances and on-premises servers. Browser-based access without opening SSH/RDP ports.",
        "usability": {
            "reviews": [
                "Safe server access without opening SSH/RDP ports",
                "Convenient direct browser access",
                "Session logs automatically recorded, helpful for auditing"
            ],
            "pros": [
                "No port opening required",
                "Browser access",
                "Session logging",
                "Secure access",
                "IAM integration"
            ],
            "cons": [
                "Agent required",
                "Network requirements",
                "Feature limitations",
                "Configuration complexity"
            ]
        }
    },
    "EC2 シリアルコンソール": {
        "name": "EC2 Serial Console",
        "description": "Direct access feature to EC2 instance serial console. Enables instance access even when network connectivity issues exist.",
        "usability": {
            "reviews": [
                "Valuable as last resort when SSH is unavailable due to network issues",
                "Effective for boot problem troubleshooting",
                "Strict security settings enable safe usage"
            ],
            "pros": [
                "Network independent",
                "Boot problem support",
                "Troubleshooting",
                "Direct access",
                "Last resort"
            ],
            "cons": [
                "Limited functionality",
                "Security configuration required",
                "Low usage frequency",
                "Regional limitations"
            ]
        }
    },
    "ECS FireLens": {
        "name": "Amazon ECS FireLens",
        "description": "Log routing feature for ECS tasks. Uses Fluent Bit or Fluentd to flexibly route logs to various destinations.",
        "usability": {
            "reviews": [
                "Flexible log destination configuration improved log management",
                "Smooth Fluent Bit integration with simple configuration",
                "Convenient simultaneous sending to multiple destinations"
            ],
            "pros": [
                "Flexible log routing",
                "Fluent Bit integration",
                "Multiple destination support",
                "Simple configuration",
                "Improved log management"
            ],
            "cons": [
                "ECS dependency",
                "Configuration learning curve",
                "Resource consumption",
                "Complex debugging"
            ]
        }
    },
    "タスク定義": {
        "name": "Task Definition",
        "description": "Template defining how containers run in ECS. Specifies container images, CPU/memory requirements, network settings, etc.",
        "usability": {
            "reviews": [
                "Can define container execution settings in detail with high environment reproducibility",
                "Version controlled, so configuration change history can be tracked",
                "Complex in JSON format, but flexible configuration once familiar"
            ],
            "pros": [
                "Detailed configuration possible",
                "Version management",
                "Reproducibility",
                "Flexible settings",
                "Templating"
            ],
            "cons": [
                "Configuration complexity",
                "JSON syntax",
                "Learning curve",
                "Configuration error risk"
            ]
        }
    },
    "カナリアリリース": {
        "name": "Canary Release",
        "description": "Deployment technique that gradually releases new versions to only a subset of users. Enables early problem detection and minimizes release risks.",
        "usability": {
            "reviews": [
                "Can safely release by minimizing new feature risks",
                "Peace of mind by limiting impact scope when problems occur",
                "Can collect user feedback gradually"
            ],
            "pros": [
                "Risk minimization",
                "Gradual release",
                "Early problem detection",
                "Limited impact scope",
                "Feedback collection"
            ],
            "cons": [
                "Configuration complexity",
                "Monitoring overhead",
                "Extended release time",
                "Management costs"
            ]
        }
    },
    "インプレースデプロイ": {
        "name": "In-Place Deployment",
        "description": "Deployment technique that directly updates applications on existing instances. Causes downtime but reduces resource costs.",
        "usability": {
            "reviews": [
                "Advantage of deploying while reducing resource costs",
                "Simple configuration and easy to understand",
                "Downtime occurs, so maintenance time coordination is necessary"
            ],
            "pros": [
                "Low cost",
                "Simple configuration",
                "Resource efficiency",
                "Easy to understand",
                "Simple setup"
            ],
            "cons": [
                "Downtime occurrence",
                "Difficult rollback",
                "High risk",
                "Service interruption"
            ]
        }
    },
    "RPO": {
        "name": "Recovery Point Objective",
        "description": "Maximum acceptable data loss time in disaster recovery. Important metric for determining backup frequency and replication strategy.",
        "usability": {
            "reviews": [
                "Can clearly define acceptable data loss range, making backup strategy easier to establish",
                "Can set RPO according to business requirements and select appropriate solutions",
                "Becomes standard for disaster recovery planning together with RTO"
            ],
            "pros": [
                "Clear metrics",
                "Backup strategy guidance",
                "Business requirement support",
                "Risk management",
                "Planning standards"
            ],
            "cons": [
                "Cost trade-offs",
                "Technical constraints",
                "Configuration difficulty",
                "Continuous review needed"
            ]
        }
    },
    "RTO": {
        "name": "Recovery Time Objective",
        "description": "Maximum acceptable service downtime in disaster recovery. Important metric for determining recovery procedures and redundancy strategies.",
        "usability": {
            "reviews": [
                "Can clearly set service recovery target time, making recovery strategy easier to establish",
                "Can determine RTO considering business impact and implement appropriate redundancy",
                "Can grasp overall disaster recovery picture together with RPO"
            ],
            "pros": [
                "Recovery target clarification",
                "Strategy planning guidance",
                "Business impact consideration",
                "Redundancy design",
                "Overall picture understanding"
            ],
            "cons": [
                "Cost trade-offs",
                "Technical constraints",
                "Complex design",
                "Continuous review needed"
            ]
        }
    },
    "Boto3": {
        "name": "AWS SDK for Python (Boto3)",
        "description": "Official SDK for controlling AWS services from Python. Enables programmatic control of nearly all AWS services including EC2, S3, DynamoDB, and more.",
        "usability": {
            "reviews": [
                "Managing cloud resources with Python has made automation much simpler",
                "Excellent documentation with abundant sample code makes learning easy",
                "Boto3 has made infrastructure as code development very efficient"
            ],
            "pros": [
                "Extensive AWS service coverage",
                "Comprehensive documentation",
                "Integration with Python ecosystem",
                "Easy automation and scripting",
                "Active community support"
            ],
            "cons": [
                "Python knowledge required",
                "Need to track API changes",
                "Complex error handling",
                "Credential management complexity"
            ]
        }
    },
    "Parameter Store": {
        "name": "AWS Systems Manager Parameter Store",
        "description": "Service for securely storing and managing configuration data and secrets. Manages application settings, database connection strings, API keys, etc. in a hierarchical structure.",
        "usability": {
            "reviews": [
                "Centralized configuration management has made environment-specific changes much easier",
                "Encryption features provide confidence when storing sensitive information",
                "Hierarchical structure makes it manageable even for large-scale systems"
            ],
            "pros": [
                "Hierarchical configuration management",
                "Encryption support",
                "Version control",
                "IAM integration",
                "Cost effective"
            ],
            "cons": [
                "Parameter size limitations",
                "Throughput limitations",
                "Regional dependency",
                "Complex permission setup"
            ]
        }
    },
    "CloudWatch Metrics": {
        "name": "Amazon CloudWatch Metrics",
        "description": "Service for collecting and monitoring performance metrics of AWS resources and applications. Visualizes CPU usage, memory consumption, network traffic, and more.",
        "usability": {
            "reviews": [
                "Creating dashboards that show system status at a glance is very convenient",
                "Custom metrics can also be sent, enabling application-specific monitoring",
                "Historical data retention is useful for trend analysis"
            ],
            "pros": [
                "Rich standard metrics",
                "Custom metrics support",
                "Real-time monitoring",
                "Long-term data retention",
                "AWS service integration"
            ],
            "cons": [
                "Custom metrics costs",
                "Data retention limits",
                "High-frequency metrics pricing",
                "Complex pricing structure"
            ]
        }
    },
    "CloudWatch Alarms": {
        "name": "Amazon CloudWatch Alarms",
        "description": "Service for setting alerts based on CloudWatch metrics and automatically executing actions when thresholds are exceeded. Supports SNS notifications, Auto Scaling triggers, and more.",
        "usability": {
            "reviews": [
                "Early detection of system anomalies has made incident response much faster",
                "Integration with Auto Scaling enables automatic scaling based on load",
                "Multiple notification destinations allow sharing monitoring status across the team"
            ],
            "pros": [
                "Automatic action execution",
                "Multiple notification channels",
                "Auto Scaling integration",
                "Flexible threshold configuration",
                "State change history"
            ],
            "cons": [
                "Alert fatigue risk",
                "Complex condition setup",
                "False positive potential",
                "Alarm count limitations"
            ]
        }
    },
    "Account Factory": {
        "name": "AWS Control Tower Account Factory",
        "description": "A feature of AWS Control Tower that automates the creation and configuration of new AWS accounts within an organization using standardized methods. It streamlines account provisioning while ensuring governance and compliance requirements are met.",
        "usability": {
            "reviews": [
                "Account creation automation has significantly reduced our setup time",
                "Consistent governance-compliant accounts give us peace of mind",
                "Multi-account management has become much more manageable"
            ],
            "pros": [
                "Automated account creation",
                "Standardized setup process",
                "Automatic governance application",
                "Compliance assurance"
            ],
            "cons": [
                "Complex initial setup",
                "Limited customization options",
                "Control Tower dependency"
            ]
        }
    },
    "Guardrails": {
        "name": "AWS Control Tower Guardrails",
        "description": "Governance features provided by AWS Control Tower that automatically apply and monitor security and compliance rules across all AWS accounts in an organization. There are two types: preventive guardrails and detective guardrails.",
        "usability": {
            "reviews": [
                "Centralized security policy management across the organization is extremely useful",
                "Automatic compliance violation detection makes audit preparation much easier",
                "Setup is somewhat complex, but once configured, it works automatically"
            ],
            "pros": [
                "Automated governance application",
                "Compliance monitoring",
                "Centralized policy management",
                "Real-time detection"
            ],
            "cons": [
                "Configuration complexity",
                "Need to understand limitations",
                "Potential cost increases"
            ]
        }
    },
    "予防的ガードレール": {
        "name": "Preventive Guardrails",
        "description": "Preventive guardrails in AWS Control Tower are mechanisms that proactively prevent specific actions in organizational AWS accounts. They use SCPs (Service Control Policies) to block policy-violating operations before execution.",
        "usability": {
            "reviews": [
                "Preventing dangerous operations upfront has significantly reduced security incident risks",
                "Developers are stopped before making incorrect configurations, which is reassuring",
                "Preventing policy violations proactively is excellent"
            ],
            "pros": [
                "Proactive prevention",
                "Real-time blocking",
                "Security risk reduction",
                "Automatic application"
            ],
            "cons": [
                "Development work restrictions",
                "Emergency response difficulties",
                "Risk of business disruption from configuration errors"
            ]
        }
    },
    "検出的ガードレール": {
        "name": "Detective Guardrails",
        "description": "Detective guardrails in AWS Control Tower are mechanisms that detect and report policy violations or configuration deviations in organizational AWS accounts. They use AWS Config rules to continuously monitor resource states and identify compliance violations.",
        "usability": {
            "reviews": [
                "Automatic detection of configuration deviations has made audit preparation much easier",
                "Real-time compliance status visibility is very convenient",
                "Automatic detailed violation reports enable quick response"
            ],
            "pros": [
                "Continuous monitoring",
                "Automatic detection and reporting",
                "Detailed compliance information",
                "Audit support"
            ],
            "cons": [
                "Detection only, no automatic remediation",
                "Potential for high volume of alerts",
                "Manual response actions required"
            ]
        }
    },
  "FloatingIP": {
    "name": "Floating IP (Elastic IP)",
    "description": "A static IPv4 address designed for dynamic cloud computing. It can be associated with any EC2 instance in your account, allowing you to maintain communication by quickly remapping the IP address to another instance in the event of an instance failure.",
    "usability": {
      "reviews": [
        "It's really convenient that the IP address doesn't change when replacing instances.",
        "It helps that system failover is quick in the event of a failure.",
        "I feel it's an essential feature for integrating with external services that require a fixed IP."
      ],
      "pros": [
        "Provides a static IP address",
        "Rapid failover",
        "Independence from the instance"
      ],
      "cons": [
        "Incurs charges if not associated with an instance",
        "Can potentially complicate management"
      ]
    }
  },
  "ElasticFabricAdapter": {
    "name": "Elastic Fabric Adapter (EFA)",
    "description": "A network interface for EC2 instances that provides lower and more consistent latency and higher throughput than traditional TCP transport, ideal for workloads like High-Performance Computing (HPC) and machine learning.",
    "usability": {
      "reviews": [
        "The performance of our HPC workloads has improved dramatically.",
        "I'm satisfied that the communication latency for our MPI applications has been significantly reduced.",
        "The configuration is a bit specialized, but it's well worth it."
      ],
      "pros": [
        "Low latency",
        "High throughput",
        "Performance improvement via OS-bypass feature"
      ],
      "cons": [
        "Limited to specific instance types",
        "Aimed at specific applications (HPC, ML)",
        "Requires specialized knowledge for configuration"
      ]
    }
  },
  "AWSNitroEnclaves": {
    "name": "AWS Nitro Enclaves",
    "description": "An EC2 feature that allows you to create isolated computing environments (enclaves) to protect and securely process highly sensitive data. The enclave has no persistent storage or network access, achieving a high level of security.",
    "usability": {
      "reviews": [
        "It provides a great sense of security to be able to completely isolate processes that handle sensitive data.",
        "It's powerful from a security perspective that even regular instance administrators cannot access it.",
        "Implementation requires changes on the application side, so a planned adoption is necessary."
      ],
      "pros": [
        "Strong separation and isolation",
        "Enhanced protection for sensitive data",
        "Attestation (verification) feature"
      ],
      "cons": [
        "No external communication or persistent storage",
        "High implementation difficulty",
        "Difficult to debug"
      ]
    }
  },
  "MaxAgeDirective": {
    "name": "Cache-Control: max-age",
    "description": "A directive in the HTTP response header that specifies the maximum amount of time in seconds that a resource is considered fresh. It is used in services like CloudFront and S3 to control browser and CDN caching behavior.",
    "usability": {
      "reviews": [
        "Just by setting max-age, the site's display speed noticeably improved.",
        "It's convenient to be able to finely control the cache duration.",
        "Fewer requests to the origin led to cost savings."
      ],
      "pros": [
        "Improved website performance",
        "Reduced load on the origin server",
        "Cost reduction"
      ],
      "cons": [
        "Content is not updated until the cache expires",
        "Difficult to set an appropriate duration",
        "Not suitable for dynamic content"
      ]
    }
  },
  "ExpiresHeader": {
    "name": "Expires Header",
    "description": "An HTTP response header that specifies the date/time after which the response is considered stale. Like max-age, it is used for cache control, but the max-age directive often takes precedence.",
    "usability": {
      "reviews": [
        "I use it as a cache setting that is also compatible with older browsers.",
        "By combining it with a CDN, we were able to streamline content delivery.",
        "It's easy to understand because you can specify a concrete date and time."
      ],
      "pros": [
        "Specification of cache duration",
        "Wide browser compatibility",
        "Performance improvement"
      ],
      "cons": [
        "max-age is often prioritized",
        "Can be affected by clock skew between server and client"
      ]
    }
  },
  "SignedUrlsOrCookies": {
    "name": "Signed URLs and Signed Cookies",
    "description": "A mechanism to control access to private content in CloudFront or S3. Signed URLs grant temporary access to a specific file, while signed cookies grant temporary access to multiple restricted files.",
    "usability": {
      "reviews": [
        "Signed URLs are useful for delivering content exclusive to members.",
        "With signed cookies, we can securely stream videos as well.",
        "It was a bit of a hassle to implement the URL generation logic into our application."
      ],
      "pros": [
        "Protection of private content",
        "Temporary access permission",
        "Flexible access policies"
      ],
      "cons": [
        "Complexity of URL/cookie generation and management",
        "Requires management of expiration dates",
        "Risk of unintentional exposure due to misconfiguration"
      ]
    }
  },
  "FieldLevelEncryption": {
    "name": "Field-Level Encryption",
    "description": "A CloudFront feature that allows you to selectively encrypt specific data submitted by users (like credit card numbers) and securely transfer it to your backend servers. The data is encrypted at the edge and remains protected throughout your application.",
    "usability": {
      "reviews": [
        "It's very convenient to be able to encrypt only a part of the POST data.",
        "We find it invaluable for applications with strict security requirements.",
        "The public key setup and field mapping felt a bit complex."
      ],
      "pros": [
        "Strong protection of sensitive data",
        "Simplification of end-to-end encryption",
        "Helps meet compliance requirements"
      ],
      "cons": [
        "Complex configuration",
        "Slight impact on performance",
        "Can make debugging more difficult"
      ]
    }
  },
  "GeographicRestrictions": {
    "name": "Geographic Restrictions (Geo-blocking)",
    "description": "A CloudFront feature that allows you to permit or block users in specific geographic locations (countries) from accessing content. It is used to control distribution regions based on content licensing agreements.",
    "usability": {
      "reviews": [
        "We were able to easily block access from specific countries to comply with our content license agreements.",
        "It's great that you can choose between a whitelist or a blacklist approach.",
        "The setup was easy, completed in just a few clicks from the web console."
      ],
      "pros": [
        "Protection of content licenses",
        "Easy access control",
        "Improved security"
      ],
      "cons": [
        "Can be bypassed using VPNs",
        "Depends on the accuracy of country detection",
        "Possibility of mistakenly blocking legitimate users"
      ]
    }
  },
  "ThrottlingLimits": {
    "name": "Throttling Limits",
    "description": "A feature in API Gateway that limits the request rate (steady-state and burst rates) for an API. This helps prevent backend services from being overwhelmed by an excessive number of requests.",
    "usability": {
      "reviews": [
        "We can limit API usage, which allows our backend to operate stably.",
        "It's useful for preventing excessive requests from specific clients.",
        "When combined with usage plans, it allows for more flexible control."
      ],
      "pros": [
        "Protection of backend systems",
        "Improved API stability",
        "Prevention of abuse and misuse"
      ],
      "cons": [
        "Difficult to set appropriate thresholds",
        "Risk of mistakenly throttling legitimate traffic"
      ]
    }
  },
  "LambdaCustomIntegration": {
    "name": "Lambda Custom (Non-Proxy) Integration",
    "description": "A type of API Gateway integration where you have detailed control over how incoming requests are mapped to the Lambda function and how the function's response is mapped back to the client. Used when request/response transformation is needed.",
    "usability": {
      "reviews": [
        "This is an essential feature when you want to finely transform requests and responses.",
        "It was convenient to be able to freely rewrite headers and format the body.",
        "I was confused at first because there are more settings compared to proxy integration."
      ],
      "pros": [
        "High flexibility and control",
        "Enables request/response transformation",
        "Easier integration with legacy systems"
      ],
      "cons": [
        "Complex configuration",
        "Learning curve for mapping templates (VTL)",
        "More effort than proxy integration"
      ]
    }
  },
  "VPCLink": {
    "name": "VPC Link",
    "description": "A feature of API Gateway that allows an API to connect to resources within a private VPC (e.g., EC2 instances behind an NLB) without traversing the public internet.",
    "usability": {
      "reviews": [
        "It's helpful for securely exposing resources within our VPC to the outside.",
        "It's great that it can integrate directly with ALBs and NLBs in private subnets.",
        "You need to be aware that the setup differs for REST APIs and HTTP APIs."
      ],
      "pros": [
        "Secure access to private resources",
        "Simplification of network architecture",
        "Exposes services in a VPC as APIs"
      ],
      "cons": [
        "Slightly complex setup",
        "Potential for minor latency increase",
        "Incurs costs"
      ]
    }
  },
  "UsagePlans": {
    "name": "Usage Plans",
    "description": "A feature of API Gateway that allows you to set throttling limits and request quotas for each client assigned an API key. Used when providing an API as a service.",
    "usability": {
      "reviews": [
        "We were able to easily create different API usage plans for each customer.",
        "By issuing API keys, it's convenient to visualize who is using how much.",
        "There are many settings, and it took time to understand their relationship with other features."
      ],
      "pros": [
        "API monetization",
        "Per-client usage control",
        "Management of API access"
      ],
      "cons": [
        "Complex configuration",
        "Requires API key management"
      ]
    }
  },
  "Stages": {
    "name": "Stages",
    "description": "A feature of API Gateway that acts as a logical reference to manage deployments of an API. You can create stages for different environments like 'dev', 'stg', and 'prod', and apply different settings (endpoints, throttling, logging) to each.",
    "usability": {
      "reviews": [
        "It's convenient to easily switch API settings between development and production environments.",
        "Using stage variables helps absorb differences between environments.",
        "It took some time to understand the concept of deployments."
      ],
      "pros": [
        "Management of the development lifecycle",
        "Separation of settings per environment",
        "Gradual deployments with Canary releases"
      ],
      "cons": [
        "Changes are not reflected if you forget to deploy",
        "Management becomes complex as the number of stages increases"
      ]
    }
  },
  "CanaryRelease": {
    "name": "Canary Release Deployment",
    "description": "A deployment strategy in API Gateway that gradually shifts traffic to a new API version. For example, you can direct 10% of traffic to the new version, verify there are no issues, and then incrementally increase the percentage.",
    "usability": {
      "reviews": [
        "We were able to safely release a new version while minimizing the impact on the production environment.",
        "It's reassuring to know we can roll back immediately if a problem occurs.",
        "The setup takes some effort, but it's well worth it."
      ],
      "pros": [
        "Risk reduction",
        "Zero-downtime deployments",
        "Comparative performance testing"
      ],
      "cons": [
        "Complex configuration",
        "Deployment takes longer",
        "Requires managing both versions"
      ]
    }
  },
  "EnhancedMonitoring": {
    "name": "Enhanced Monitoring",
    "description": "A feature in services like RDS and EC2 that collects more detailed metrics (e.g., CPU utilization breakdown, process memory usage). It sends OS-level metrics to CloudWatch Logs, helping to identify performance bottlenecks.",
    "usability": {
      "reviews": [
        "It helped us resolve issues faster by identifying which process was causing high CPU usage.",
        "It's essential for troubleshooting as it provides detailed information not available in standard metrics.",
        "You need to be mindful of costs as it increases log output."
      ],
      "pros": [
        "Detailed performance analysis",
        "Faster problem resolution",
        "OS-level visibility"
      ],
      "cons": [
        "Incurs additional charges",
        "Consumes CloudWatch Logs capacity"
      ]
    }
  },
  "CloudWatchAgent": {
    "name": "CloudWatch Agent",
    "description": "Software installed on EC2 instances or on-premises servers to send system-level metrics (e.g., memory usage, disk usage) and log files to CloudWatch.",
    "usability": {
      "reviews": [
        "Being able to monitor memory usage was a huge improvement for us.",
        "We were able to easily centralize our application logs in CloudWatch Logs.",
        "The configuration file format is unique and took some time to get used to."
      ],
      "pros": [
        "Detailed metric collection (memory, disk, etc.)",
        "Log file aggregation",
        "Monitoring of on-premises servers"
      ],
      "cons": [
        "Requires agent installation and configuration",
        "Complex configuration file syntax"
      ]
    }
  },
  "CloudWatchDashboards": {
    "name": "CloudWatch Dashboards",
    "description": "A feature of CloudWatch that displays metrics and alarms for resources across multiple regions in a single, customizable view. It helps to get an at-a-glance overview of operational status.",
    "usability": {
      "reviews": [
        "Operations became much easier because we can monitor important metrics on a single screen.",
        "There's a rich variety of graph types, allowing us to create visually intuitive dashboards.",
        "Thanks to the auto-refresh feature, we can always see the latest status."
      ],
      "pros": [
        "Visualization of operational status",
        "Customizable views",
        "Centralized management across multiple regions"
      ],
      "cons": [
        "Widget layout requires a bit of design sense",
        "Can become cluttered if too many metrics are displayed"
      ]
    }
  },
  "CloudWatchLogsInsights": {
    "name": "CloudWatch Logs Insights",
    "description": "A feature for interactively searching and analyzing log data stored in CloudWatch Logs. Using a purpose-built query language, you can quickly extract and visualize information from large volumes of logs.",
    "usability": {
      "reviews": [
        "I was impressed at how instantly I could find specific error logs from a huge amount of data.",
        "It's very powerful to be able to aggregate and graph logs using queries.",
        "There is a bit of a learning curve to master the query language."
      ],
      "pros": [
        "Fast log analysis",
        "Flexible query capabilities",
        "Visualization of analysis results"
      ],
      "cons": [
        "Learning curve for the query language",
        "Charged based on the amount of data scanned"
      ]
    }
  },
  "CloudWatchContainerInsights": {
    "name": "CloudWatch Container Insights",
    "description": "A feature that collects, aggregates, and summarizes metrics and logs from your containerized applications and microservices on ECS, EKS, Fargate, etc. It allows you to monitor performance at the cluster, task, and pod level.",
    "usability": {
      "reviews": [
        "Performance monitoring of our container environment has become much easier.",
        "You can see at a glance which container is consuming resources.",
        "We could start using it right away because dashboards are created automatically."
      ],
      "pros": [
        "Visibility into container environments",
        "Identification of performance issues",
        "Ease of setup"
      ],
      "cons": [
        "Additional charges for collected custom metrics",
        "Requires query knowledge for detailed analysis"
      ]
    }
  },
  "CloudWatchAlarms": {
    "name": "CloudWatch Alarms",
    "description": "A feature that monitors a specific metric and, if it crosses a specified threshold for a certain period, automatically triggers actions like sending an SNS notification or stopping/rebooting an EC2 instance.",
    "usability": {
      "reviews": [
        "We've set it up to send a notification when CPU usage goes up, which helps us detect potential issues.",
        "By integrating with Auto Scaling, we achieved automatic scaling based on load.",
        "The variety of alarm actions allows for various types of automation."
      ],
      "pros": [
        "Proactive monitoring",
        "Automation of actions",
        "Faster incident response"
      ],
      "cons": [
        "Difficult to set appropriate thresholds (false positives/negatives)",
        "Management can become complex with many alarms"
      ]
    }
  },
  "SubscriptionFilters": {
    "name": "CloudWatch Logs Subscription Filters",
    "description": "A feature of CloudWatch Logs that allows you to filter log events from a log stream in real time and deliver them to other AWS services like Lambda, Kinesis, or Elasticsearch Service.",
    "usability": {
      "reviews": [
        "We built a system that triggers a Lambda to notify Slack the moment a specific error log is written.",
        "We forward log data to Kinesis in real time for stream processing.",
        "You need to get used to the filter pattern syntax."
      ],
      "pros": [
        "Real-time log processing",
        "Enables event-driven architectures",
        "Flexible integration with other AWS services"
      ],
      "cons": [
        "Learning curve for filter patterns",
        "Risk of unintended behavior from misconfiguration"
      ]
    }
  },
  "AutomatedBackups": {
    "name": "Automated Backups",
    "description": "A feature provided by services like RDS and DynamoDB that automatically backs up your database. A daily snapshot is created within a specified backup window, and transaction logs are also saved, enabling point-in-time recovery.",
    "usability": {
      "reviews": [
        "It's very easy because we no longer have to think about backup operations at all.",
        "It gives us peace of mind knowing we can restore to any point in time in case of an emergency.",
        "It's important to set the backup window to an appropriate time."
      ],
      "pros": [
        "Reduced operational overhead",
        "High reliability",
        "Point-in-time recovery"
      ],
      "cons": [
        "Incurs costs for backup storage",
        "Slight impact on performance"
      ]
    }
  },
  "Failover": {
    "name": "Failover",
    "description": "A mechanism that automatically switches processing to a standby component when the primary component (e.g., DB instance, EC2 instance) fails. Implemented in features like RDS Multi-AZ, it achieves high availability for a system.",
    "usability": {
      "reviews": [
        "I was surprised that automatic failover was achieved just by enabling Multi-AZ.",
        "When a failure occurred, it switched over automatically, which prevented a service outage.",
        "The connection drops for a moment during failover, so a reconnection logic on the application side is necessary."
      ],
      "pros": [
        "Achieves high availability",
        "Minimizes downtime",
        "Automatic failure recovery"
      ],
      "cons": [
        "Incurs costs for the standby instance",
        "Momentary performance degradation during failover"
      ]
    }
  },
  "RDSProxy": {
    "name": "Amazon RDS Proxy",
    "description": "A fully managed, highly available database proxy for RDS. It efficiently manages a large number of connections and improves application scalability and resilience by sharing a pool of database connections.",
    "usability": {
      "reviews": [
        "It solved the problem of exhausting connections when connecting to RDS from Lambda.",
        "I'm satisfied that the failover time has been significantly reduced.",
        "It was easy to use, just by changing the application's connection endpoint to the proxy."
      ],
      "pros": [
        "Connection pooling",
        "Faster failover",
        "Improved security (IAM authentication)"
      ],
      "cons": [
        "Incurs additional costs",
        "Limited to specific DB engines",
        "Some SQL features may not be supported"
      ]
    }
  },
  "Sharding": {
    "name": "Sharding",
    "description": "A technique of partitioning a large database into multiple smaller databases called shards. By distributing data, it distributes read/write load and improves the overall scalability of the system. In AWS, DynamoDB does this automatically internally.",
    "usability": {
      "reviews": [
        "Sharding is essential for large-scale services with high write traffic.",
        "With DynamoDB, you can get the benefits of scalability without having to think about sharding.",
        "Manually implementing and operating sharding is extremely complex and difficult."
      ],
      "pros": [
        "High scalability",
        "Improved read/write performance",
        "Load balancing"
      ],
      "cons": [
        "Implementation and operational complexity (if manual)",
        "Queries spanning multiple shards are difficult",
        "Requires careful attention to data skew"
      ]
    }
  },
  "Encryption": {
    "name": "Encryption",
    "description": "The process of converting data so it cannot be read by third parties. AWS supports encryption for both data at rest and data in transit. It's common to use KMS to manage encryption keys.",
    "usability": {
      "reviews": [
        "Enabling encryption on S3 and RDS was very easy, just a matter of checking a box.",
        "Operations are easy because we can delegate key management to AWS with KMS.",
        "Encryption is a mandatory feature to meet our security requirements."
      ],
      "pros": [
        "Data protection",
        "Compliance with security standards",
        "Easy configuration"
      ],
      "cons": [
        "Slight overhead from encryption/decryption",
        "Key management becomes critical"
      ]
    }
  },
  "DataRetention": {
    "name": "Data Retention",
    "description": "The policy or setting that defines how long data should be stored. Features like S3 Lifecycle policies or RDS automated backup retention periods allow you to define data retention and automatically delete or archive data that is no longer needed.",
    "usability": {
      "reviews": [
        "Using S3 Lifecycle policies to automatically move old logs to Glacier has resulted in cost savings.",
        "It's great that we can flexibly set the backup retention period.",
        "We configure data retention periods to align with legal and compliance requirements."
      ],
      "pros": [
        "Storage cost optimization",
        "Meeting compliance requirements",
        "Automation of operations"
      ],
      "cons": [
        "Risk of losing necessary data due to misconfigured policies",
        "Requires planning on what data to retain and for how long"
      ]
    }
  },
  "PointInTimeRecovery": {
    "name": "Point-in-Time Recovery (PITR)",
    "description": "A feature that restores a database to a specific point in time (down to the second). Supported by services like RDS and DynamoDB, it is achieved by combining daily backups with transaction logs. It's effective for recovering from accidental data deletion or modification.",
    "usability": {
      "reviews": [
        "This feature saved us when we accidentally deleted data due to an operational error.",
        "It's reassuring that we can restore to an almost immediate state, up to five minutes ago.",
        "It's wonderful that just by enabling it, we are prepared for emergencies."
      ],
      "pros": [
        "Flexible data recovery",
        "Recovery from human error",
        "High level of data protection"
      ],
      "cons": [
        "Incurs additional costs when enabled (e.g., log storage)",
        "The restoration process takes time"
      ]
    }
  },
  "ReadCapacityUnit": {
    "name": "Read Capacity Unit (RCU)",
    "description": "A unit of throughput capacity in DynamoDB. One RCU can perform one strongly consistent read per second, or two eventually consistent reads per second, for an item up to 4 KB in size. It is configured in advance in provisioned mode.",
    "usability": {
      "reviews": [
        "We can optimize costs by finely setting the RCUs according to the required read performance.",
        "It's convenient that Auto Scaling can adjust it automatically based on traffic.",
        "Understanding the concept of RCUs and WCUs was a bit difficult at first."
      ],
      "pros": [
        "Cost optimization",
        "Predictable performance",
        "Flexible scaling"
      ],
      "cons": [
        "Difficult to forecast appropriate capacity",
        "Throttling occurs if the setting is exceeded"
      ]
    }
  },
  "Transactions": {
    "name": "Transactions",
    "description": "A feature that guarantees a series of operations are executed on an 'all-or-nothing' basis. Supported by services like DynamoDB, it maintains consistency for a set of operations across multiple tables or items.",
    "usability": {
      "reviews": [
        "It helps maintain data integrity in processes that need to update multiple tables simultaneously.",
        "We were able to implement it simply, whereas before we had to write complex logic on the application side.",
        "Transactions consume more capacity than regular reads and writes."
      ],
      "pros": [
        "Guarantees data consistency (ACID)",
        "Simplifies application logic",
        "Atomic operations on multiple items/tables"
      ],
      "cons": [
        "High consumption of capacity units",
        "Limit on the number of items that can be operated on at once"
      ]
    }
  },
  "StorageClassAnalysis": {
    "name": "S3 Storage Class Analysis",
    "description": "An S3 feature that analyzes object access patterns to recommend transitioning to more cost-effective storage classes. It provides insights for optimizing lifecycle policies.",
    "usability": {
      "reviews": [
        "It was helpful to get specific recommendations on which data to move to IA or Glacier.",
        "We significantly reduced storage costs by setting lifecycle rules based on the analysis results.",
        "It's important to note that the analysis itself incurs a cost."
      ],
      "pros": [
        "Storage cost optimization",
        "Data-driven decision making",
        "Simplification of lifecycle policy configuration"
      ],
      "cons": [
        "Incurs a fee for analysis",
        "Takes time to get analysis results"
      ]
    }
  },
  "S3RequesterPays": {
    "name": "S3 Requester Pays",
    "description": "A feature that configures an S3 bucket so that the requester (the one downloading the data) pays for data transfer and request costs, instead of the bucket owner. This can reduce the owner's costs when distributing large datasets.",
    "usability": {
      "reviews": [
        "It was helpful not to have to worry about transfer fees when distributing large amounts of data to many people.",
        "The use case is selective, as the requester also needs an AWS account.",
        "The bucket-level setting was easy to configure."
      ],
      "pros": [
        "Reduction of data distribution costs",
        "Sharing of large datasets",
        "Clarification of cost liability"
      ],
      "cons": [
        "Requester must have an AWS account",
        "Cannot be used for anonymous access"
      ]
    }
  },
  "S3EventNotificationDestinations": {
    "name": "S3 Event Notifications Destinations",
    "description": "The destinations to which notifications can be sent when a specific event (e.g., object creation, deletion) occurs in an S3 bucket. Lambda functions, SNS topics, and SQS queues can be specified, serving as a starting point for building event-driven processes.",
    "usability": {
      "reviews": [
        "We easily implemented a process to automatically generate thumbnails with Lambda, triggered by an image upload.",
        "Event notification settings can be configured intuitively from the console.",
        "Appropriate permissions are required for each destination service."
      ],
      "pros": [
        "Building event-driven architectures",
        "Automation of processes",
        "Flexible integration with other AWS services"
      ],
      "cons": [
        "Risk of unintended loops due to misconfiguration",
        "Notification reliability can sometimes be best-effort"
      ]
    }
  },
  "SignedURLs": {
    "name": "Signed URLs",
    "description": "A URL that provides temporary access to a private object in S3 or CloudFront. The URL itself contains authentication credentials and an expiration time, used for things like content delivery for membership sites.",
    "usability": {
      "reviews": [
        "It's convenient for allowing a specific user to download a private file for a limited time.",
        "Generating a signed URL is easy using the SDK.",
        "You can enhance security by setting a short expiration time."
      ],
      "pros": [
        "Temporary access permission",
        "Secure sharing of private content",
        "Flexible access control"
      ],
      "cons": [
        "Anyone can access the content if the URL is leaked",
        "Requires implementing URL generation logic in the application"
      ]
    }
  },
  "Glacier": {
    "name": "Amazon S3 Glacier",
    "description": "A secure, durable, and extremely low-cost S3 storage class for data archiving and long-term backup. As data retrieval takes several minutes to hours, it is suitable for storing data that is not frequently accessed.",
    "usability": {
      "reviews": [
        "We dramatically reduced storage costs by using it as an archive for logs that needed long-term retention.",
        "If you understand that retrieval takes time, it's extremely cost-effective.",
        "Operations are easy because S3 lifecycle policies can automatically move data to Glacier."
      ],
      "pros": [
        "Extremely low storage cost",
        "High durability and security",
        "Seamless integration with S3"
      ],
      "cons": [
        "Data retrieval is slow",
        "Has minimum storage duration and early deletion fees",
        "Not suitable for frequent access"
      ]
    }
  },
  "S3AccessAnalyzer": {
    "name": "IAM Access Analyzer for S3",
    "description": "A feature that analyzes S3 bucket access policies to identify and warn about buckets that might grant unintended external access, such as being accessible to anyone on the internet.",
    "usability": {
      "reviews": [
        "It helped us find a publicly configured bucket we weren't aware of, preventing a security risk.",
        "By checking periodically, we can maintain healthy access permissions for our buckets.",
        "I appreciate that it's available for free."
      ],
      "pros": [
        "Identification of security risks",
        "Prevention of unintended data leakage",
        "Detection of configuration mistakes"
      ],
      "cons": [
        "Requires understanding the intent of warnings and taking action",
        "It only analyzes and warns, it does not auto-remediate"
      ]
    }
  },
  "IAMDatabaseAuthentication": {
    "name": "IAM Database Authentication",
    "description": "A feature for RDS for MySQL/PostgreSQL and Aurora that allows you to use IAM users or roles for database authentication. It improves security by eliminating the need to manage passwords and using temporary IAM credentials to connect to the DB.",
    "usability": {
      "reviews": [
        "Our security improved significantly by not having to embed DB user passwords in code.",
        "It's very convenient to manage DB access permissions centrally with IAM.",
        "There's an extra step of generating a temporary auth token on connection, but the SDK handles it."
      ],
      "pros": [
        "No password management needed",
        "Enhanced security",
        "Centralized access control with IAM"
      ],
      "cons": [
        "Limited to specific DB engines",
        "Requires application-side changes (to get the token)"
      ]
    }
  },
  "IAMRoleTrustPolicy": {
    "name": "IAM Role Trust Policy",
    "description": "A policy attached to an IAM role that defines which entities (users, other AWS accounts, AWS services) are permitted to assume that role (AssumeRole). It's a critical setting for defining trust relationships.",
    "usability": {
      "reviews": [
        "I set this policy when giving an EC2 instance permissions to access S3.",
        "I feel it's a security fundamental because it clearly defines who or what can use the role.",
        "I was a bit confused at first because it's written in JSON format."
      ],
      "pros": [
        "Achieves the principle of least privilege",
        "Secure delegation of permissions",
        "Enables inter-service collaboration"
      ],
      "cons": [
        "Misconfiguration can lead directly to security risks",
        "Requires familiarity with writing JSON"
      ]
    }
  },
  "AWSIAMIdentityCenter": {
    "name": "AWS IAM Identity Center (successor to AWS SSO)",
    "description": "A service for centrally creating and managing access to multiple AWS accounts and business applications. It integrates with external identity providers (like Azure AD, Okta) to provide users with a single sign-on (SSO) experience.",
    "usability": {
      "reviews": [
        "Operations became dramatically easier, freeing us from managing IAM users in multiple accounts.",
        "It's convenient for users because they can log into AWS with the IdP they normally use.",
        "The initial setup has a few steps, but the documentation is thorough."
      ],
      "pros": [
        "Centralized management of multiple accounts",
        "Enables Single Sign-On (SSO)",
        "Enhanced security"
      ],
      "cons": [
        "Initial setup is somewhat complex",
        "Integration with external IdPs requires some knowledge"
      ]
    }
  },
  "InstanceProfile": {
    "name": "Instance Profile",
    "description": "A container for an IAM role that an EC2 instance uses to obtain temporary credentials associated with its role. It's used when assigning an IAM role to an EC2 instance, allowing applications running on the instance to access AWS services.",
    "usability": {
      "reviews": [
        "Security has improved significantly since we no longer need to store access keys on the EC2 instance.",
        "It's convenient to change permissions just by changing the role attached to the EC2, without modifying application code.",
        "You must remember to set it when launching an EC2 instance."
      ],
      "pros": [
        "Simplified credential management",
        "High security",
        "Flexible permission management"
      ],
      "cons": [
        "Changing a role may require restarting the instance",
        "The concepts of IAM roles and instance profiles can be a bit confusing"
      ]
    }
  },
  "DNSHostnamesOption": {
    "name": "VPC DNS Hostnames Option",
    "description": "A VPC option that, when enabled, automatically assigns public DNS hostnames to EC2 instances launched within the VPC. This only applies to instances that have a public IP address.",
    "usability": {
      "reviews": [
        "This is a convenient setting when you want to access instances by a recognizable name.",
        "Some AWS services may not work correctly unless this setting and 'DNS resolution' are enabled.",
        "It's enabled in the default VPC, but you need to consciously set it for custom VPCs."
      ],
      "pros": [
        "Automatic assignment of public DNS hostnames",
        "Easier access to instances",
        "Compatibility with AWS services"
      ],
      "cons": [
        "Potential for unintentional exposure of hostnames externally",
        "Some services may fail to connect if disabled"
      ]
    }
  },
  "FailoverRouting": {
    "name": "Route 53 Failover Routing Policy",
    "description": "A routing policy in Route 53 that monitors the health of a primary resource. If it detects an issue, it automatically switches DNS query routing to a secondary (standby) resource.",
    "usability": {
      "reviews": [
        "When a failure occurred in one region, it helped that it automatically switched to the other region.",
        "You can easily achieve a simple Active-Passive high-availability setup.",
        "If health checks are not configured correctly, it can lead to unintended failovers."
      ],
      "pros": [
        "Achieves high availability",
        "Automatic failure recovery",
        "Ease of configuration"
      ],
      "cons": [
        "Switching delays due to DNS caching",
        "Proper health check configuration is critical"
      ]
    }
  },
  "MultivalueAnswerRouting": {
    "name": "Route 53 Multivalue Answer Routing Policy",
    "description": "A routing policy in Route 53 that responds to DNS queries with multiple values (e.g., IP addresses). It performs health checks on each resource and returns only the IPs of healthy resources, achieving simple load balancing and improved availability.",
    "usability": {
      "reviews": [
        "I use it to set up multiple web servers for simple load balancing and redundancy.",
        "It's useful for small-scale setups that don't warrant an ELB.",
        "It's a mechanism that relies on the client side to randomly pick an IP."
      ],
      "pros": [
        "Simple load balancing",
        "Improved availability",
        "Lower cost than an ELB"
      ],
      "cons": [
        "Even load distribution is not guaranteed",
        "Cannot maintain session affinity"
      ]
    }
  },
  "PublicHostedZone": {
    "name": "Public Hosted Zone",
    "description": "A Route 53 feature that acts as a container for defining how to respond to DNS queries from the internet. It manages record sets for routing traffic for a domain name (e.g., example.com) to resources like web servers or S3 buckets.",
    "usability": {
      "reviews": [
        "The web console is intuitive, making DNS record management very easy.",
        "The integration with various AWS services (Alias records) is very powerful.",
        "There is a monthly fee for each hosted zone."
      ],
      "pros": [
        "High availability and reliability",
        "Seamless integration with AWS services",
        "Intuitive management console"
      ],
      "cons": [
        "Incurs a fixed monthly fee",
        "Requires some knowledge of DNS"
      ]
    }
  },
  "LambdaLayers": {
    "name": "Lambda Layers",
    "description": "A Lambda feature that allows you to package dependencies like libraries or custom runtimes as a ZIP file and share them across multiple Lambda functions. It helps keep deployment package sizes small and streamlines code management.",
    "usability": {
      "reviews": [
        "Deployments became much faster after I consolidated commonly used libraries into a layer.",
        "It's easier to manage because you can separate code from dependencies.",
        "The versioning feature allows for safe updates."
      ],
      "pros": [
        "Reduces deployment package size",
        "Improves code reusability",
        "Simplifies dependency management"
      ],
      "cons": [
        "There is a limit to the number of layers",
        "Local testing can become slightly more complex"
      ]
    }
  },
  "LambdaVPCAccess": {
    "name": "Lambda VPC Access",
    "description": "A setting to place a Lambda function inside a VPC, allowing it to securely access private resources within the VPC (like RDS, ElastiCache) without going through the internet. An Elastic Network Interface (ENI) is attached to the Lambda function.",
    "usability": {
      "reviews": [
        "Now our Lambda can securely access our private RDS database.",
        "This is an essential feature when security requirements demand blocking external communication.",
        "You need to be aware of increased cold start times due to ENI creation."
      ],
      "pros": [
        "Secure access to private resources",
        "Enhanced network security",
        "Integration with services inside a VPC"
      ],
      "cons": [
        "Increases cold start times (improved by Hyperplane ENI)",
        "Consumes IP addresses from the VPC"
      ]
    }
  },
  "AutoScaling": {
    "name": "AWS Auto Scaling",
    "description": "A service that automatically increases or decreases the number of resources like EC2 instances based on application load. It maintains performance by adding resources during high demand and reduces costs by removing resources during low demand.",
    "usability": {
      "reviews": [
        "It automatically handles traffic spikes, so we no longer worry about our servers going down.",
        "The cost savings are significant because it reduces instances during off-peak hours.",
        "Tuning the scaling policies is key to balancing performance and cost."
      ],
      "pros": [
        "Improved availability",
        "Cost optimization",
        "Enhanced fault tolerance"
      ],
      "cons": [
        "Difficult to configure optimal scaling policies",
        "Scaling out/in can take time"
      ]
    }
  },
  "HealthChecks": {
    "name": "Health Checks",
    "description": "A mechanism used by ELB, Auto Scaling, and Route 53 to verify that target resources (like EC2 instances) are operating correctly. It automatically detaches unhealthy resources to prevent traffic from being sent to them.",
    "usability": {
      "reviews": [
        "It prevents a total service outage by automatically detaching instances whose applications have become unresponsive.",
        "It's great that you can finely tune the health check interval and thresholds.",
        "It's crucial to correctly configure the health check path."
      ],
      "pros": [
        "High reliability and availability",
        "Automatic failure detection and recovery",
        "Stable system operation"
      ],
      "cons": [
        "Misconfigured health checks can cause false positives",
        "Temporary high load can cause health check failures"
      ]
    }
  },
  "ScaleOut": {
    "name": "Scale Out",
    "description": "An approach to increasing system capacity by adding more servers (horizontal scaling). Achieved with services like Auto Scaling, it distributes the load per machine. The opposite is Scale Up (increasing server specs).",
    "usability": {
      "reviews": [
        "We were able to flexibly handle sudden traffic increases by adding more instances.",
        "Scaling out with multiple servers provides better fault tolerance than a single high-spec server.",
        "A stateless application is a prerequisite for scaling out."
      ],
      "pros": [
        "High flexibility and scalability",
        "Improved fault tolerance",
        "Can be cost-effective"
      ],
      "cons": [
        "Increases system complexity",
        "Difficult to apply to stateful applications"
      ]
    }
  },
  "ElastiCacheForRedis": {
    "name": "ElastiCache for Redis",
    "description": "A managed in-memory data store service provided by AWS. It's used for use cases requiring fast responses, such as caching, session stores, and real-time analytics. It offers high performance and scalability.",
    "usability": {
      "reviews": [
        "It reduced the load on our database and dramatically improved application response times.",
        "The biggest benefit is offloading tedious operational management to AWS.",
        "You can easily scale out using cluster mode."
      ],
      "pros": [
        "Ultra-fast performance",
        "High scalability",
        "Rich data structures"
      ],
      "cons": [
        "Data is not persistent as it's in-memory (persistence option available)",
        "Relatively high cost"
      ]
    }
  },
  "ElastiCacheForMemcached": {
    "name": "ElastiCache for Memcached",
    "description": "A managed in-memory caching service provided by AWS. It is a simple key-value store specialized for object caching. It is suitable when the simplest possible model is desired.",
    "usability": {
      "reviews": [
        "It's very simple and easy to use, with sufficient performance for caching purposes.",
        "It tends to have lower CPU usage than Redis, making it suitable for large-scale caching.",
        "If you need multiple data types or persistence, you should choose Redis."
      ],
      "pros": [
        "Simplicity and ease of use",
        "High throughput due to multithreading",
        "Low latency"
      ],
      "cons": [
        "No data persistence",
        "Simple data types (strings and binaries only)",
        "Not as feature-rich as Redis"
      ]
    }
  },
  "WriteThroughCaching": {
    "name": "Write-Through Caching",
    "description": "A caching strategy where data is first written to the cache and then to the database. The operation is not considered complete until both writes succeed, ensuring data consistency between the cache and DB, but increasing write latency.",
    "usability": {
      "reviews": [
        "We use this strategy in systems where data consistency is critical.",
        "Reads become faster, but write latency can sometimes be an issue.",
        "The implementation is relatively simple and easy to understand."
      ],
      "pros": [
        "High data consistency",
        "No need to read data from DB on a cache miss",
        "Relatively easy implementation"
      ],
      "cons": [
        "Increased write latency",
        "Writes data to the cache that may not be used frequently"
      ]
    }
  },
  "CloudFormationStackSets": {
    "name": "CloudFormation StackSets",
    "description": "An extension of CloudFormation that allows you to create, update, or delete CloudFormation stacks across multiple AWS accounts and regions from a single template. Used for things like deploying baseline configurations across an organization.",
    "usability": {
      "reviews": [
        "It became very easy to deploy common IAM roles and security settings to all accounts.",
        "It dramatically streamlines resource management across multiple accounts and regions.",
        "The concept is difficult to grasp at first, but it's a powerful tool once you get used to it."
      ],
      "pros": [
        "Centralized management of multiple accounts/regions",
        "Strengthens governance and compliance",
        "Improved operational efficiency"
      ],
      "cons": [
        "High learning curve",
        "Complex troubleshooting when errors occur"
      ]
    }
  },
  "CloudFormationChangeSets": {
    "name": "CloudFormation Change Sets",
    "description": "A feature that allows you to preview the changes before updating a CloudFormation stack. You can see which resources will be added, modified, or deleted in advance, preventing unintended changes and enabling safe stack updates.",
    "usability": {
      "reviews": [
        "I can deploy with confidence because I can check the impact before changing the production infrastructure.",
        "This is an essential feature to prevent accidental deletion or replacement of resources.",
        "We established a safe operational flow of reviewing changes before execution."
      ],
      "pros": [
        "Safe infrastructure updates",
        "Preview of changes in advance",
        "Prevention of unintended changes"
      ],
      "cons": [
        "Adds an extra step to stack updates",
        "Some changes, like those with dynamic references, cannot be previewed"
      ]
    }
  },
  "CloudFormationDriftDetection": {
    "name": "CloudFormation Drift Detection",
    "description": "A feature to detect whether resources managed by CloudFormation have been modified manually or otherwise outside of the template's definition (drift). It helps maintain configuration integrity by checking if the infrastructure state matches the code.",
    "usability": {
      "reviews": [
        "It helped us identify where someone had manually changed settings from the console.",
        "It's crucial for practicing IaC to confirm that the configuration has not diverged from the code.",
        "We run drift detection periodically to maintain the health of our infrastructure."
      ],
      "pros": [
        "Maintains configuration integrity",
        "Detection of manual changes",
        "Improves reliability of Infrastructure as Code"
      ],
      "cons": [
        "Does not automatically remediate drift",
        "Some resources do not support drift detection"
      ]
    }
  }
}
